[{"C:\\Users\\HP\\waka-meals-admin\\src\\index.js":"1","C:\\Users\\HP\\waka-meals-admin\\src\\reportWebVitals.js":"2","C:\\Users\\HP\\waka-meals-admin\\src\\App.js":"3","C:\\Users\\HP\\waka-meals-admin\\src\\PrivateRoute.js":"4","C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\store.js":"5","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\DeliveryOderList.jsx":"6","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\HeaderNav.jsx":"7","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ConfirmedOrderList.jsx":"8","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CanceledOderList.jsx":"9","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CompletedOrderList.jsx":"10","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\NewOderList.jsx":"11","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveDeliveryManList.jsx":"12","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedUserList.jsx":"13","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveUserList.jsx":"14","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\PendingDeliveryManList.jsx":"15","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditProfile.jsx":"16","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveMeals.jsx":"17","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedMeals.jsx":"18","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedDeliveryManList.jsx":"19","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CategoryList.jsx":"20","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\SubCategory.jsx":"21","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateSubCategory.jsx":"22","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateCategory.jsx":"23","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateLocation.jsx":"24","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedLocationList.jsx":"25","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateMeals.jsx":"26","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditMeal.jsx":"27","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveChef.jsx":"28","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Auth\\Login.jsx":"29","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveLocationList.jsx":"30","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditLocation.jsx":"31","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedChef.jsx":"32","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\PasswordChange.jsx":"33","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditCategory.jsx":"34","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditSubCategory.jsx":"35","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\Dashboard.jsx":"36","C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\reducers.js":"37","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\Preloader.js":"38","C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\actions.js":"39","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\NewOrderListView.jsx":"40","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ConfirmedOrderListView.jsx":"41","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\CancelledOrderListView.jsx":"42","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\BlockedChefView.jsx":"43","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ActiveChefView.jsx":"44","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\BlockedLocationView.jsx":"45","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ActiveLocationView.jsx":"46","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ActiveDmanView.jsx":"47","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\UserBlocked.jsx":"48","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\DeliveringOdersView.jsx":"49","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\ChefNav.jsx":"50","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\ReservationNav.jsx":"51","C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\types.js":"52","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\StateListNav.jsx":"53","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\UserListNav.jsx":"54","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\CategoryNav.jsx":"55","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\DeliveryManListNav.jsx":"56","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\MealListNav.jsx":"57","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\SubCategoryNav.jsx":"58","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\OrderListNav.jsx":"59","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\PendingDmanView.jsx":"60","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\BlockedDmanView.jsx":"61","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ViewMeal.jsx":"62","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\UserActive.jsx":"63","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ViewMealDisable.jsx":"64","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\PendingReservation.jsx":"65","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\PendingReservationView.jsx":"66","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ApprovedReservation.jsx":"67","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ApprovedReservationView.jsx":"68","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CancelledReservation.jsx":"69","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\CancelledReservationView.jsx":"70","C:\\Users\\HP\\waka-meals-chef\\src\\index.js":"71","C:\\Users\\HP\\waka-meals-chef\\src\\reportWebVitals.js":"72","C:\\Users\\HP\\waka-meals-chef\\src\\App.js":"73","C:\\Users\\HP\\waka-meals-chef\\src\\PrivateRoute.js":"74","C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\store.js":"75","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Navigation\\HeaderNav.jsx":"76","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\PasswordChange.jsx":"77","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\Login.jsx":"78","C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\reducers.js":"79","C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\actions.js":"80","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\Preloader.js":"81","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Navigation\\OrderListNav.jsx":"82","C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\types.js":"83","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\Signup.jsx":"84","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\Dashboard.jsx":"85","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\OpenedOrderList.jsx":"86","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\OpenedOrderView.jsx":"87","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\CompeletedOrderList.jsx":"88","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\CompeletedOrderView.jsx":"89","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\ForgotPassword.jsx":"90","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\SetNewPassword.jsx":"91","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\InKitchenOrderList.jsx":"92","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\AlmostReadyOrderList.jsx":"93","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\InKitchenOrderView.jsx":"94","C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\AlmostReadyOrderView.jsx":"95"},{"size":511,"mtime":1608212020361,"results":"96","hashOfConfig":"97"},{"size":362,"mtime":1607590526507,"results":"98","hashOfConfig":"97"},{"size":5785,"mtime":1612134601560,"results":"99","hashOfConfig":"97"},{"size":466,"mtime":1612045621324,"results":"100","hashOfConfig":"97"},{"size":650,"mtime":1608122961416,"results":"101","hashOfConfig":"97"},{"size":4290,"mtime":1608816796357,"results":"102","hashOfConfig":"97"},{"size":2343,"mtime":1608813969047,"results":"103","hashOfConfig":"97"},{"size":4299,"mtime":1608816796357,"results":"104","hashOfConfig":"97"},{"size":4299,"mtime":1608816796357,"results":"105","hashOfConfig":"97"},{"size":4287,"mtime":1608816796357,"results":"106","hashOfConfig":"97"},{"size":4478,"mtime":1608841405488,"results":"107","hashOfConfig":"97"},{"size":4244,"mtime":1608816796357,"results":"108","hashOfConfig":"97"},{"size":4077,"mtime":1608816796357,"results":"109","hashOfConfig":"97"},{"size":4064,"mtime":1608816796357,"results":"110","hashOfConfig":"97"},{"size":4255,"mtime":1608816796357,"results":"111","hashOfConfig":"97"},{"size":1315,"mtime":1607789650071,"results":"112","hashOfConfig":"97"},{"size":4179,"mtime":1608816796357,"results":"113","hashOfConfig":"97"},{"size":4110,"mtime":1608816796357,"results":"114","hashOfConfig":"97"},{"size":4254,"mtime":1608816796357,"results":"115","hashOfConfig":"97"},{"size":4664,"mtime":1608840019272,"results":"116","hashOfConfig":"97"},{"size":4481,"mtime":1608840039260,"results":"117","hashOfConfig":"97"},{"size":6624,"mtime":1608840354148,"results":"118","hashOfConfig":"97"},{"size":4309,"mtime":1608839136338,"results":"119","hashOfConfig":"97"},{"size":4313,"mtime":1612052638140,"results":"120","hashOfConfig":"97"},{"size":2496,"mtime":1612055015940,"results":"121","hashOfConfig":"97"},{"size":19600,"mtime":1608845187753,"results":"122","hashOfConfig":"97"},{"size":21133,"mtime":1608840296028,"results":"123","hashOfConfig":"97"},{"size":3798,"mtime":1612058583874,"results":"124","hashOfConfig":"97"},{"size":4450,"mtime":1612044306844,"results":"125","hashOfConfig":"97"},{"size":2507,"mtime":1612055044956,"results":"126","hashOfConfig":"97"},{"size":4581,"mtime":1612054302930,"results":"127","hashOfConfig":"97"},{"size":3811,"mtime":1612059117327,"results":"128","hashOfConfig":"97"},{"size":7307,"mtime":1608817025271,"results":"129","hashOfConfig":"97"},{"size":4728,"mtime":1608839284003,"results":"130","hashOfConfig":"97"},{"size":7038,"mtime":1608840246084,"results":"131","hashOfConfig":"97"},{"size":7889,"mtime":1612098639812,"results":"132","hashOfConfig":"97"},{"size":572,"mtime":1612044078270,"results":"133","hashOfConfig":"97"},{"size":406,"mtime":1608198321943,"results":"134","hashOfConfig":"97"},{"size":1021,"mtime":1612043327443,"results":"135","hashOfConfig":"97"},{"size":12794,"mtime":1608816796357,"results":"136","hashOfConfig":"97"},{"size":18778,"mtime":1608839508658,"results":"137","hashOfConfig":"97"},{"size":12408,"mtime":1608816796357,"results":"138","hashOfConfig":"97"},{"size":2113,"mtime":1612059633446,"results":"139","hashOfConfig":"97"},{"size":2094,"mtime":1612058676428,"results":"140","hashOfConfig":"97"},{"size":1643,"mtime":1612059274222,"results":"141","hashOfConfig":"97"},{"size":2405,"mtime":1612053391911,"results":"142","hashOfConfig":"97"},{"size":7044,"mtime":1608816796357,"results":"143","hashOfConfig":"97"},{"size":4747,"mtime":1608816796357,"results":"144","hashOfConfig":"97"},{"size":12417,"mtime":1608816796357,"results":"145","hashOfConfig":"97"},{"size":1896,"mtime":1612097003010,"results":"146","hashOfConfig":"97"},{"size":2423,"mtime":1612098599773,"results":"147","hashOfConfig":"97"},{"size":195,"mtime":1608120413208,"results":"148","hashOfConfig":"97"},{"size":2400,"mtime":1612051599411,"results":"149","hashOfConfig":"97"},{"size":1885,"mtime":1608116883371,"results":"150","hashOfConfig":"97"},{"size":1871,"mtime":1608206550758,"results":"151","hashOfConfig":"97"},{"size":1910,"mtime":1608728284454,"results":"152","hashOfConfig":"97"},{"size":2345,"mtime":1608117133491,"results":"153","hashOfConfig":"97"},{"size":1896,"mtime":1608290238248,"results":"154","hashOfConfig":"97"},{"size":3428,"mtime":1608805343844,"results":"155","hashOfConfig":"97"},{"size":7939,"mtime":1608816796357,"results":"156","hashOfConfig":"97"},{"size":7011,"mtime":1608816796357,"results":"157","hashOfConfig":"97"},{"size":7231,"mtime":1608816796357,"results":"158","hashOfConfig":"97"},{"size":4355,"mtime":1608816796357,"results":"159","hashOfConfig":"97"},{"size":6578,"mtime":1608816796357,"results":"160","hashOfConfig":"97"},{"size":3911,"mtime":1612129835061,"results":"161","hashOfConfig":"97"},{"size":6534,"mtime":1612134099833,"results":"162","hashOfConfig":"97"},{"size":3915,"mtime":1612133897876,"results":"163","hashOfConfig":"97"},{"size":6567,"mtime":1612133887764,"results":"164","hashOfConfig":"97"},{"size":3921,"mtime":1612134512448,"results":"165","hashOfConfig":"97"},{"size":6640,"mtime":1612134363651,"results":"166","hashOfConfig":"97"},{"size":511,"mtime":1608212020361,"results":"167","hashOfConfig":"168"},{"size":362,"mtime":1607590526507,"results":"169","hashOfConfig":"168"},{"size":2019,"mtime":1612263006084,"results":"170","hashOfConfig":"168"},{"size":399,"mtime":1612262960010,"results":"171","hashOfConfig":"168"},{"size":709,"mtime":1612140069499,"results":"172","hashOfConfig":"168"},{"size":2341,"mtime":1613388718453,"results":"173","hashOfConfig":"168"},{"size":7294,"mtime":1613152061163,"results":"174","hashOfConfig":"168"},{"size":5080,"mtime":1613386999033,"results":"175","hashOfConfig":"168"},{"size":1047,"mtime":1612138285136,"results":"176","hashOfConfig":"168"},{"size":1851,"mtime":1613152061163,"results":"177","hashOfConfig":"168"},{"size":406,"mtime":1608198321943,"results":"178","hashOfConfig":"168"},{"size":2936,"mtime":1612254564665,"results":"179","hashOfConfig":"168"},{"size":409,"mtime":1612139002284,"results":"180","hashOfConfig":"168"},{"size":8264,"mtime":1613152061161,"results":"181","hashOfConfig":"168"},{"size":1936,"mtime":1612263463264,"results":"182","hashOfConfig":"168"},{"size":4242,"mtime":1613389496450,"results":"183","hashOfConfig":"184"},{"size":12309,"mtime":1613389462629,"results":"185","hashOfConfig":"184"},{"size":4262,"mtime":1613389478203,"results":"186","hashOfConfig":"184"},{"size":11135,"mtime":1613389446583,"results":"187","hashOfConfig":"184"},{"size":4648,"mtime":1613152061162,"results":"188","hashOfConfig":"168"},{"size":8363,"mtime":1613152061162,"results":"189","hashOfConfig":"168"},{"size":4258,"mtime":1613152061163,"results":"190","hashOfConfig":"168"},{"size":4266,"mtime":1613152061163,"results":"191","hashOfConfig":"168"},{"size":11577,"mtime":1613152061162,"results":"192","hashOfConfig":"168"},{"size":11577,"mtime":1613152061162,"results":"193","hashOfConfig":"168"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ey8ji6",{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"204"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"204"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"204"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"204"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"204"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"204"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"204"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"204"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"204"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"204"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"204"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"204"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"204"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"204"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"204"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"204"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"204"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"204"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"204"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"204"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"204"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"204"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"204"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"204"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"204"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"204"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"204"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"204"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"204"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"204"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"204"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"204"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"204"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"204"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"204"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"204"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"204"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"204"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"204"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"204"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"204"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"204"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"204"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"204"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"204"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"204"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"379","messages":"380","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fwbn7j",{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"403","messages":"404","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"eqi3pq",{"filePath":"413","messages":"414","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"427","messages":"428","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"429","messages":"430","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\waka-meals-admin\\src\\index.js",[],"C:\\Users\\HP\\waka-meals-admin\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\waka-meals-admin\\src\\App.js",[],"C:\\Users\\HP\\waka-meals-admin\\src\\PrivateRoute.js",[],"C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\store.js",[],["431","432"],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\DeliveryOderList.jsx",["433"],"import {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport DeliveringOdersView from \"../ReuseableCompononts/DeliveringOdersView\"\r\n\r\nexport default function DeliveryOderList(props) {\r\n    const [oderData, setOderData] = useState([]);\r\n    const [oders, setOders] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setOderData(oderData.concat(...res.data.orders.data));\r\n            });\r\n    };\r\n\r\n    const loadUOrderData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/order/list/dispatched', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data.orders.data);\r\n                console.log(res.data.orders.data);\r\n                setOderData(res.data.orders.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUOrderData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n             {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {oderData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Delivery Order Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\" >\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\"  style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Order Code</th>\r\n                            <th>Quantity</th>\r\n                            <th>Date</th>\r\n                            <th>Status</th>\r\n                            <th>Type</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody  style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {oderData.map(data =>  <DeliveringOdersView data={data}  loadUOrderData={loadUOrderData} {...props}/> )}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={oderData.length}\r\n                            next={nextData}\r\n                            hasMore={oders.current_page !== oders.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n\r\n            {/* ========USER PROFILE MODAL======== */}\r\n            {/* <UserProfileModal /> */}\r\n            {/* ========VIEW ODER MODAL=======*/}\r\n            {/* <ViewOrderModal/> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\HeaderNav.jsx",["434","435","436","437"],"import React from 'react';\r\nimport {BiMenuAltRight} from 'react-icons/bi';\r\nimport {Link} from 'react-router-dom';\r\nimport Cookie from \"js-cookie\";\r\nimport Logo from \"../../images/wmlogo.jpg\"\r\nexport default function HeaderNav() {\r\n    return (\r\n        <div>\r\n            {/* ============ NAVBAR SECTION==========  */}\r\n            <nav className=\"navbar navbar-expand-lg\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    {' '}\r\n                    <img src={Logo}  style={{height: \"50px\", }}/>\r\n                </a>\r\n                <button\r\n                className={`${Cookie.get('user') ? \"d-sm-block  d-md-block\" : \"d-none \"}  d-lg-none navbar-toggler`}\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\">\r\n                    <BiMenuAltRight style={{color: 'white', fontSize: '30px'}} />\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className={`${Cookie.get('user') ? \"d-lg-block\" : \"d-lg-none\"} nav-item active`}>\r\n                            <Link style={{color: 'inherit', textDecoration: 'inherit'}} to=\"/dashboard\">\r\n                            Dashboard \r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li  className={`${Cookie.get('user') ? \"d-lg-block\" : \"d-lg-none\"} nav-item`}>\r\n                            <a className=\"nav-link text-white\" href=\"#\">\r\n                                <a onClick={() => logout()} className=\"nav-link text-white\" href=\"#\" >\r\n                                    LogOut\r\n                                </a>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            {/* ============ NAVBAR SECTION ENDS HERE==========  */}\r\n        </div>\r\n    );\r\n}\r\n//LOGOUT\r\nconst logout = () => {\r\n    Cookie.remove('user');\r\n    window.location.reload();\r\n};","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ConfirmedOrderList.jsx",["438"],"import {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ConfirmedOrderListView from \"../ReuseableCompononts/ConfirmedOrderListView\"\r\n\r\nexport default function ConfirmedOrderList(props) {\r\n    const [oderData, setOderData] = useState([]);\r\n    const [oders, setOders] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setOderData(oderData.concat(...res.data.orders.data));\r\n            });\r\n    };\r\n\r\n    const loadUOrderData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/order/list/confirmed', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data.orders.data);\r\n                console.log(res.data.orders.data);\r\n                setOderData(res.data.orders.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUOrderData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n             {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {oderData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Confirm Order Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\" >\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\"  style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Order Code</th>\r\n                            <th>Quantity</th>\r\n                            <th>Date</th>\r\n                            <th>Status</th>\r\n                            <th>Type</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody  style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {oderData.map(data =>  <ConfirmedOrderListView data={data}  loadUOrderData={loadUOrderData} {...props}/> )}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={oderData.length}\r\n                            next={nextData}\r\n                            hasMore={oders.current_page !== oders.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n\r\n            {/* ========USER PROFILE MODAL======== */}\r\n            {/* <UserProfileModal /> */}\r\n            {/* ========VIEW ODER MODAL=======*/}\r\n            {/* <ViewOrderModal/> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CanceledOderList.jsx",["439"],"import {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport CancelledOrderListView from \"../ReuseableCompononts/CancelledOrderListView\"\r\n\r\nexport default function CanceledOderList(props) {\r\n    const [oderData, setOderData] = useState([]);\r\n    const [oders, setOders] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setOderData(oderData.concat(...res.data.orders.data));\r\n            });\r\n    };\r\n\r\n    const loadUOrderData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/order/list/cancelled', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data.orders.data);\r\n                console.log(res.data.orders.data);\r\n                setOderData(res.data.orders.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUOrderData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n             {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {oderData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Cancelled Order Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\" >\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\"  style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Order Code</th>\r\n                            <th>Quantity</th>\r\n                            <th>Date</th>\r\n                            <th>Status</th>\r\n                            <th>Type</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody  style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {oderData.map(data =>  <CancelledOrderListView data={data}  loadUOrderData={loadUOrderData} {...props}/> )}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={oderData.length}\r\n                            next={nextData}\r\n                            hasMore={oders.current_page !== oders.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n\r\n            {/* ========USER PROFILE MODAL======== */}\r\n            {/* <UserProfileModal /> */}\r\n            {/* ========VIEW ODER MODAL=======*/}\r\n            {/* <ViewOrderModal/> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CompletedOrderList.jsx",["440"],"import {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport CompletedOrderView from \"../ReuseableCompononts/CompletedOrderView\"\r\n\r\nexport default function CanceledOderList(props) {\r\n    const [oderData, setOderData] = useState([]);\r\n    const [oders, setOders] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setOderData(oderData.concat(...res.data.orders.data));\r\n            });\r\n    };\r\n\r\n    const loadUOrderData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/order/list/completed', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data.orders.data);\r\n                console.log(res.data.orders.data);\r\n                setOderData(res.data.orders.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUOrderData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n             {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {oderData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Completed Order Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\" >\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\"  style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Order Code</th>\r\n                            <th>Quantity</th>\r\n                            <th>Date</th>\r\n                            <th>Status</th>\r\n                            <th>Type</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody  style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {oderData.map(data =>  <CompletedOrderView data={data}  loadUOrderData={loadUOrderData} {...props}/> )}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={oderData.length}\r\n                            next={nextData}\r\n                            hasMore={oders.current_page !== oders.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n\r\n            {/* ========USER PROFILE MODAL======== */}\r\n            {/* <UserProfileModal /> */}\r\n            {/* ========VIEW ODER MODAL=======*/}\r\n            {/* <ViewOrderModal/> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\NewOderList.jsx",["441"],"import {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport NewOrderListView from \"../ReuseableCompononts/NewOrderListView\"\r\n\r\nexport default function NewOderList(props) {\r\n    const [oderData, setOderData] = useState([]);\r\n    const [oders, setOders] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setOderData(oderData.concat(...res.data.orders.data));\r\n            });\r\n    };\r\n\r\n    const loadUOrderData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/order/list/new', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOders(res.data.orders.data);\r\n                console.log(res.data.orders.data);\r\n                setOderData(res.data.orders.data);\r\n                setNextPageUrl(res.data.orders.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            loadUOrderData();\r\n        }, 180000);\r\n        loadUOrderData();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n             {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n               <div className=\"mt-5 text-center\">\r\n                   <h5><b>checking for new oders</b></h5>\r\n               </div>\r\n                </div>\r\n            )}\r\n            {oderData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No New Order Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\" >\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\"  style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Order Code</th>\r\n                            <th>Quantity</th>\r\n                            <th>Date</th>\r\n                            <th>Status</th>\r\n                            <th>Type</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody  style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {oderData.map(data =>  <NewOrderListView data={data}  loadUOrderData={loadUOrderData} {...props}/> )}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={oderData.length}\r\n                            next={nextData}\r\n                            hasMore={oders.current_page !== oders.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n\r\n            {/* ========USER PROFILE MODAL======== */}\r\n            {/* <UserProfileModal /> */}\r\n            {/* ========VIEW ODER MODAL=======*/}\r\n            {/* <ViewOrderModal/> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveDeliveryManList.jsx",["442"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ActiveDmanView from '../ReuseableCompononts/ActiveDmanView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function ActiveDeliveryManList(props) {\r\n    const [dispatcherData,setDispatcherData] = useState([]);\r\n    const [dispatcher, setDispatcher] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setDispatcher(res.data);\r\n                setNextPageUrl(res.data.dispatchers.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setDispatcherData(dispatcher.concat(...res.data.dispatchers.data));\r\n            });\r\n    };\r\n\r\n    const loadDispatcherData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/dispatcher/list/active', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setDispatcher(res.data.dispatchers.data);\r\n                console.log(res.data.dispatchers.data);\r\n                setDispatcherData(res.data.dispatchers.data);\r\n                setNextPageUrl(res.data.dispatchers.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadDispatcherData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {dispatcherData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Delivery Man Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Code</th>\r\n                            <th>Name</th>\r\n                            <th>State</th>\r\n                            <th>Town</th>\r\n                            <th>Type</th>\r\n                            <th>Delivery Count</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {dispatcherData.map(data => <ActiveDmanView data={data} {...props}    loadDispatcherData={loadDispatcherData} />)}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={dispatcherData.length}\r\n                            next={nextData}\r\n                            hasMore={dispatcher.current_page !== dispatcher.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedUserList.jsx",["443"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport UserBlocked from '../ReuseableCompononts/UserBlocked';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function BlockedUserList(props) {\r\n    const [userData, setUserData] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setUsers(res.data);\r\n                setNextPageUrl(res.data.users.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setUserData(userData.concat(...res.data.users.data));\r\n            });\r\n    };\r\n\r\n    const loadUserData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/user/list/blocked', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setUsers(res.data.users.data);\r\n                console.log(res.data.users.data);\r\n                setUserData(res.data.users.data);\r\n                setNextPageUrl(res.data.user.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUserData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {userData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Blocked User Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"thead-light\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Title</th>\r\n                                <th>Email</th>\r\n                                <th>Phone</th>\r\n                                <th>Orders Count</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                            {userData.map(data => <UserBlocked data={data} {...props} loadUserData={loadUserData} />)}\r\n                        </tbody>\r\n                        <InfiniteScroll\r\n                            dataLength={userData.length}\r\n                            next={nextData}\r\n                            hasMore={users.current_page !== users.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveUserList.jsx",["444"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport UserActive from '../ReuseableCompononts/UserActive';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function ActiveUserList(props) {\r\n    const [userData, setUserData] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setUsers(res.data);\r\n                setNextPageUrl(res.data.users.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setUserData(userData.concat(...res.data.users.data));\r\n            });\r\n    };\r\n\r\n    const loadUserData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/user/list/active', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setUsers(res.data.users.data);\r\n                console.log(res.data.users.data);\r\n                setUserData(res.data.users.data);\r\n                setNextPageUrl(res.data.user.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUserData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {userData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No User Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"thead-light\">\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Title</th>\r\n                                <th>Email</th>\r\n                                <th>Phone</th>\r\n                                <th>Orders Count</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                            {userData.map(data => <UserActive data={data} {...props} loadUserData={loadUserData} />)}\r\n                        </tbody>\r\n                        <InfiniteScroll\r\n                            dataLength={userData.length}\r\n                            next={nextData}\r\n                            hasMore={users.current_page !== users.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\PendingDeliveryManList.jsx",["445"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport PendingDmanView from '../ReuseableCompononts/PendingDmanView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function BlockedDeliveryManList(props) {\r\n    const [dispatcherData,setDispatcherData] = useState([]);\r\n    const [dispatcher, setDispatcher] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setDispatcher(res.data);\r\n                setNextPageUrl(res.data.dispatchers.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setDispatcherData(dispatcher.concat(...res.data.dispatchers.data));\r\n            });\r\n    };\r\n\r\n    const loadDispatcherData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/dispatcher/list/pending', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setDispatcher(res.data.dispatchers.data);\r\n                console.log(res.data.dispatchers.data);\r\n                setDispatcherData(res.data.dispatchers.data);\r\n                setNextPageUrl(res.data.dispatchers.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadDispatcherData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {dispatcherData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Pending Delivery Man Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\" >\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Code</th>\r\n                            <th>Name</th>\r\n                            <th>State</th>\r\n                            <th>Town</th>\r\n                            <th>Type</th>\r\n                            <th>Delivery Count</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {dispatcherData.map(data => <PendingDmanView data={data} {...props} loadDispatcherData={loadDispatcherData} />)}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={dispatcherData.length}\r\n                            next={nextData}\r\n                            hasMore={dispatcher.current_page !== dispatcher.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditProfile.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveMeals.jsx",["446","447"],"import {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ViewMeal from '../ReuseableCompononts/ViewMeal';\r\n\r\nexport default function ActiveMeals(props) {\r\n    const [mealData, setMealData] = useState([]);\r\n    const [meals, setMeals] = useState([]);\r\n    const [mealSlug, setMealSlug] = useState();\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setMeals(res.data);\r\n                setNextPageUrl(res.data.meals.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setMealData(mealData.concat(...res.data.meals.data));\r\n            });\r\n    };\r\n\r\n    const loadMealData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/meal/list/available', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setMeals(res.data.meals.data);\r\n                console.log(res.data.meals.data);\r\n                setMealData(res.data.meals.data);\r\n                setMealSlug(res.data.meals.data.slug);\r\n                setNextPageUrl(res.data.meals.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadMealData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {mealData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Meal Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Measurement Quantity</th>\r\n                                <th>Measurement Type</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                            {mealData.map(data => <ViewMeal data={data} {...props} loadMealData={loadMealData} />)}\r\n                        </tbody>\r\n                        <InfiniteScroll\r\n                            dataLength={mealData.length}\r\n                            next={nextData}\r\n                            hasMore={meals.current_page !== meals.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedMeals.jsx",["448"],"\r\nimport {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ViewMealDisable from '../ReuseableCompononts/ViewMealDisable';\r\n\r\n\r\n\r\nexport default function BlockedMeals(props) {\r\n    const [mealData, setMealData] = useState([]);\r\n    const [meals, setMeals] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setMeals(res.data);\r\n                setNextPageUrl(res.data.meals.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setMealData(mealData.concat(...res.data.meals.data));\r\n            });\r\n    };\r\n\r\n    const loadMealData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/meal/list/unavailable', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setMeals(res.data.meals.data);\r\n                console.log(res.data.meals.data);\r\n                setMealData(res.data.meals.data);\r\n                setNextPageUrl(res.data.meals.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadMealData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {mealData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Blocked Meal Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Price</th>\r\n                                <th>Measurement Quantity</th>\r\n                                <th>Measurement Type</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                            {mealData.map(data => <ViewMealDisable data={data} {...props} loadMealData={loadMealData} />)}\r\n                        </tbody>\r\n                        <InfiniteScroll\r\n                            dataLength={mealData.length}\r\n                            next={nextData}\r\n                            hasMore={meals.current_page !== meals.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedDeliveryManList.jsx",["449"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport BlockedDmanView from '../ReuseableCompononts/BlockedDmanView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function BlockedDeliveryManList(props) {\r\n    const [dispatcherData,setDispatcherData] = useState([]);\r\n    const [dispatcher, setDispatcher] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setDispatcher(res.data);\r\n                setNextPageUrl(res.data.dispatchers.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setDispatcherData(dispatcher.concat(...res.data.dispatchers.data));\r\n            });\r\n    };\r\n\r\n    const loadDispatcherData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/dispatcher/list/blocked', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setDispatcher(res.data.dispatchers.data);\r\n                console.log(res.data.dispatchers.data);\r\n                setDispatcherData(res.data.dispatchers.data);\r\n                setNextPageUrl(res.data.dispatchers.next_page_url);\r\n                setLoading(false);\r\n                // if(res.data.products.data.length < 1){\r\n                // \tsetStatus('No Ad')\r\n                // }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadDispatcherData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {dispatcherData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Blocked Delivery Man Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\">\r\n                        <tr>\r\n                            <th>Code</th>\r\n                            <th>Name</th>\r\n                            <th>State</th>\r\n                            <th>Town</th>\r\n                            <th>Type</th>\r\n                            <th>Delivery Count</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {dispatcherData.map(data => <BlockedDmanView data={data} {...props} loadDispatcherData={loadDispatcherData} />)}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={dispatcherData.length}\r\n                            next={nextData}\r\n                            hasMore={dispatcher.current_page !== dispatcher.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CategoryList.jsx",["450","451"],"import React, {useState, useEffect} from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {AiOutlineEdit} from 'react-icons/ai';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function CategoryList(props) {\r\n    const [categoryData, setCategoryData] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const loadCategory = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/category/list', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setCategoryData(res.data.categories);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {categoryData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Category Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Meal </th>\r\n                                <th>Sub-Category</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                            {categoryData.map(data => (\r\n                                <tr key={data.id}>\r\n                                    <td>{data.name}</td>\r\n                                    <td>{data.meals_count}</td>\r\n                                    <td>{data.subcategories_count}</td>\r\n                                    <td>\r\n                                        <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                                            <Link\r\n                                            style={{ color: 'inherit', textDecoration: 'inherit'}}\r\n                                                to={{\r\n                                                    pathname: `/edit-category/${data.slug}`,\r\n                                                    state: data\r\n                                                }}>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"btn btn-success btn-sm\"\r\n                                                    data-toggle=\"tooltip\"\r\n                                                    data-placement=\"top\"\r\n                                                    title=\"Edit category\">\r\n                                                    <AiOutlineEdit />\r\n                                                </button>\r\n                                            </Link>\r\n                                            {/* <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-danger  btn-sm\"\r\n                                                data-toggle=\"tooltip\"\r\n                                                data-placement=\"top\"\r\n                                                title=\"Delete category\">\r\n                                                <GiCancel />\r\n                                            </button> */}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\SubCategory.jsx",["452","453"],"import React, {useState, useEffect} from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {AiOutlineEdit} from 'react-icons/ai';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function SubCategory(props) {\r\n    const [subCategoryData, setSubCategoryData] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const loadCategory = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/subcategory/list_all', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSubCategoryData(res.data.subcategories);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {subCategoryData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Sub Category Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                        <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                            <tr >\r\n                                <th>Name</th>\r\n                                <th>Meal Count</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                            {subCategoryData.map(data => (\r\n                                <tr key={data.id}>\r\n                                    <td>{data.name}</td>\r\n                                    <td>{data.meals_count}</td>\r\n\r\n                                    <td>\r\n                                        <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                                            <Link\r\n                                                to={{\r\n                                                    pathname: `/edit-sub-category/${data.slug}`,\r\n                                                    state: data\r\n                                                }}>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"btn btn-success btn-sm\"\r\n                                                    data-toggle=\"tooltip\"\r\n                                                    data-placement=\"top\"\r\n                                                    title=\"Edit category\">\r\n                                                    <AiOutlineEdit />\r\n                                                </button>\r\n                                            </Link>\r\n                                            {/* <button\r\n                                                type=\"button\"\r\n                                                className=\"btn btn-danger btn-small\"\r\n                                                data-toggle=\"tooltip\"\r\n                                                data-placement=\"top\"\r\n                                                title=\"Delete category\">\r\n                                                <GiCancel />\r\n                                            </button> */}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateSubCategory.jsx",["454","455","456"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nexport default function CreateSubCategory(props) {\r\n    const [subCategory, setSubCategory] = useState({\r\n        name: '',\r\n        category: ''\r\n    });\r\n    const [categoryData, setCategoryData] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false,\r\n        message: ''\r\n    });\r\n    const [Errormessage, setErrorMessage] = useState();\r\n    const [ErrorName, setErrorName] = useState();\r\n    const [show, setShow] = useState(false);\r\n\r\n    //======USER GLOBAL STATE FROM REDUX========\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const {name, category} = subCategory;\r\n    const onChangeHandler = e => {\r\n        setSubCategory({...subCategory, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    // ========== API CALL FOR THE CATEGORY LIST\r\n    const loadCategory = () => {\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/category/list', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setCategoryData(res.data.categories);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        const payload = new FormData();\r\n        payload.append('name', subCategory.name);\r\n        payload.append('category', subCategory.category);\r\n        setLoading(true);\r\n        axios\r\n            .post('https://server.wakafoods.com/api/admin/subcategory/new', payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/sub-category-list');\r\n                }, 2000);\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.message);\r\n                setErrorName(error.response.data.errors.name);\r\n                console.log(Errormessage);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"cat-subcat container\">\r\n            {loading ? <Preloader /> : null}\r\n\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: true\r\n                        })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: false\r\n                        })}\r\n                />\r\n            ) : null}\r\n\r\n            <form style={{marginTop: '30%'}}>\r\n                <div classsName=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Sub Category Name\r\n                        </label>\r\n                        <select\r\n                            name=\"category\"\r\n                            onChange={e => onChangeHandler(e)}\r\n                            id=\"inputState\"\r\n                            class=\"form-control\"\r\n                            style={{fontSize: '0.7em'}}>\r\n                            <option hidden>\r\n                                {'>>>>'} Choose Category {'<<<<'}\r\n                            </option>\r\n                            {categoryData.map(data => (\r\n                                <option\r\n                                    className=\"cursor\"\r\n                                    key={data.slug}\r\n                                    value={data.slug}\r\n                                    selected={category === data.slug ? true : false}>\r\n                                    {data.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Sub Category Name\r\n                        </label>\r\n                        <input\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Category Name\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group col-md-12\">\r\n                        <button\r\n                            className=\"btn btn-sm btn-block\"\r\n                            style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                            type=\"submit\"\r\n                            onClick={onSubmitHandle}>\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateCategory.jsx",["457","458"],"import {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nexport default function CreateCategory(props) {\r\n    const [category, setCategory] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false, \r\n        message: \"\"\r\n    });\r\n    const [Errormessage, setErrorMessage] = useState();\r\n    const [ErrorName, setErrorName] = useState();\r\n    const [show, setShow] = useState(false);\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const {name} = category;\r\n    const onChangeHandler = e => {\r\n        setCategory({...category, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        const payload = new FormData();\r\n        payload.append('name', category.name);\r\n        setLoading(true);\r\n        axios\r\n            .post('https://server.wakafoods.com/api/admin/category/new', payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/category-list');\r\n                }, 2000);\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.message);\r\n                setErrorName(error.response.data.errors.name);\r\n                console.log(Errormessage);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"cat-subcat container\">\r\n            {loading ? <Preloader /> : null}\r\n\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: true,\r\n                    })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: false,\r\n                    })}\r\n                />\r\n            ) : null}\r\n\r\n            <form style={{marginTop: '30%'}}>\r\n                <div classsName=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Category Name\r\n                        </label>\r\n                        <input\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Category Name\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group col-md-12\">\r\n                        <button\r\n                            className=\"btn btn-sm btn-block\"\r\n                            style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                            type=\"submit\"\r\n                            onClick={onSubmitHandle}>\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateLocation.jsx",["459","460"],"import {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nexport default function CreateLocation(props) {\r\n    const [location, setLocation] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false, \r\n        message: \"\"\r\n    });\r\n    const [Errormessage, setErrorMessage] = useState();\r\n    const [ErrorName, setErrorName] = useState();\r\n    const [show, setShow] = useState(false);\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const {name} = location;\r\n    const onChangeHandler = e => {\r\n        setLocation({...location, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        const payload = new FormData();\r\n        payload.append('name', location.name);\r\n        setLoading(true);\r\n        axios\r\n            .post('https://server.wakafoods.com/api/admin/place/new', payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/active-location-list');\r\n                }, 2000);\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.message);\r\n                setErrorName(error.response.data.errors.name);\r\n                console.log(Errormessage);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"cat-subcat container\">\r\n            {loading ? <Preloader /> : null}\r\n\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: true,\r\n                    })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: false,\r\n                    })}\r\n                />\r\n            ) : null}\r\n\r\n            <form style={{marginTop: '30%'}}>\r\n                <div classsName=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Location Name\r\n                        </label>\r\n                        <input\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Location Name\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group col-md-12\">\r\n                        <button\r\n                            className=\"btn btn-sm btn-block\"\r\n                            style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                            type=\"submit\"\r\n                            onClick={onSubmitHandle}>\r\n                            Create\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedLocationList.jsx",["461","462"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport BlockedLocationView from '../ReuseableCompononts/BlockedLocationView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function BlockedLocationList(props) {\r\n    const [stateData,setStateData] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n\r\n\r\n    const loadLocationData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/place/list/disabled', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setStateData(res.data.places);\r\n                setLoading(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadLocationData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {stateData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Blocked Location Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Name</th> \r\n                            <th className=\"text-right\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {stateData.map(data => <BlockedLocationView data={data} {...props} loadLocationData={loadLocationData} />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CreateMeals.jsx",["463","464"],"import React, {useState, useEffect} from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill from 'react-quill';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport jsonToFormData from 'json-form-data';\r\n\r\nconst CreateMeals = props => {\r\n    const [errors, setError] = useState({});\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false,\r\n        message: ''\r\n    });\r\n    const [mealData, setMealtData] = useState({\r\n        name: '',\r\n        price: 0,\r\n        category: '',\r\n        subcategory: '',\r\n        measurement_quantity: 0,\r\n        measurement_type: '',\r\n        description: '',\r\n        image: ''\r\n    });\r\n\r\n    const newMealExtraData = {\r\n        name: '',\r\n        price: 0,\r\n        measurement_type: '',\r\n        measurement_quantity: 0\r\n    };\r\n\r\n    const [inputs, setInputs] = useState([]);\r\n\r\n    //====== FOR ADD MEAL EXTRA========\r\n    const addNewExtraData = e => {\r\n        e.preventDefault();\r\n        let tempInputs = [...inputs];\r\n        tempInputs.push(newMealExtraData);\r\n        setInputs(tempInputs);\r\n        console.log(inputs);\r\n    };\r\n\r\n    //======ONCHANGE FOR MEAL EXTRA========\r\n    const onChange = (e, index) => {\r\n        let oldInput = [...inputs];\r\n        console.log(oldInput[index]);\r\n        oldInput[index][e.target.name] = e.target.value;\r\n        setInputs(oldInput);\r\n    };\r\n\r\n    const {subcategory, category, name, measurement_quantity, price, measurement_type, description, image} = mealData;\r\n\r\n    //======ONCHANGE FOR OTHER INPUTS========\r\n    const onChangeHandler = e => {\r\n        setMealtData({...mealData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    //======ONCHANGE FOR IMAGE========\r\n    const onChangeImageHandler = e => {\r\n        setMealtData({...mealData, image: e.target.files[0]});\r\n    };\r\n\r\n    //======ONCHANGE FOR CATEGORY TO AVOID TO RECALL THE SUBCATECORY AGAIN===========\r\n    const onCategoryChange = e => {\r\n        setMealtData({...mealData, category: e.target.value});\r\n        loadSubCategory(e.target.value);\r\n    };\r\n\r\n    // ===ONCHANGE FOR DESCRIPTION ==========\r\n    const onDescriptionChange = val => {\r\n        setMealtData({...mealData, description: val});\r\n    };\r\n\r\n    // ========== API CALL FOR THE CATEGORY LIST =======\r\n    const [categoryData, setCategoryData] = useState([]);\r\n    const loadCategory = () => {\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/category/list', {\r\n               \r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setCategoryData(res.data.categories);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    // ==============SUBCATEGORY LIST STATE =========\r\n\r\n    const [subcategoryData, setSubCategoryData] = useState([]);\r\n    const [notShow, setNotShow] = useState(true);\r\n    const loadSubCategory = category => {\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/subcategory/list/${category}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(res);\r\n                setSubCategoryData(res.data.subcategories);\r\n                setNotShow(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    //======USER GLOBAL STATE FROM REDUX============\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n\r\n     // ======SUBMIT FUNC ===========\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        let ad_form_data = {...mealData, meal_extras: inputs};\r\n        console.log(ad_form_data);\r\n        const form_config = {\r\n            initialFormData: new FormData(),\r\n            showLeafArrayIndexes: true,\r\n            includeNullValues: false,\r\n            mapping: function(value) {\r\n                if (typeof value === 'boolean') {\r\n                    return +value ? '1' : '0';\r\n                }\r\n                return value;\r\n            }\r\n        };\r\n        const main_form_data = jsonToFormData(ad_form_data, form_config);\r\n\r\n        setLoading(true);\r\n        console.log(inputs);\r\n\r\n        axios\r\n            .post('https://server.wakafoods.com/api/admin/meal/new', main_form_data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/active-meal-list');\r\n                }, 2000);\r\n            })\r\n            .catch(error => {\r\n                setError(error.response.data);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"making-page-centerelized container\">\r\n            {loading ? <Preloader /> : null}\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: true\r\n                        })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: false\r\n                        })}\r\n                />\r\n            ) : null}\r\n            <form className=\"mt-5\">\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Category\r\n                        </label>\r\n                        <select\r\n                            name=\"category\"\r\n                            onChange={e => onCategoryChange(e)}\r\n                            id=\"inputState\"\r\n                            class=\"form-control\"\r\n                            style={{fontSize: '0.7em'}}>\r\n                            <option hidden>\r\n                                {'>>>>'} Choose Category {'<<<<'}\r\n                            </option>\r\n                            {categoryData.map(data => (\r\n                                <option\r\n                                    className=\"cursor\"\r\n                                    key={data.slug}\r\n                                    value={data.slug}\r\n                                    selected={category === data.slug ? true : false}>\r\n                                    {data.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.category}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Sub Category\r\n                        </label>\r\n                        <select\r\n                            style={{fontSize: '0.7em'}}\r\n                            className=\"form-control\"\r\n                            name=\"subcategory\"\r\n                            value={subcategory}\r\n                            onChange={e => onChangeHandler(e)}\r\n                            disabled={notShow}>\r\n                            <option hidden>\r\n                                {'>>>>'} select subcategory {'<<<<'}\r\n                            </option>\r\n                            {subcategoryData.map(data => (\r\n                                <option\r\n                                    className=\"cursor\"\r\n                                    key={data.slug}\r\n                                    value={data.slug}\r\n                                    selected={subcategory === data.slug ? true : false}>\r\n                                    {data.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.subcategory}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Meal Name\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Meal Name\"\r\n                            class=\"form-control\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                         {errors.errors && <p style={styles.formError}>{errors.errors.name}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Meal Price\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Meal Price\"\r\n                            class=\"form-control\"\r\n                            name=\"price\"\r\n                            value={price}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                         {errors.errors && <p style={styles.formError}>{errors.errors.price}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Measurement Quantity\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            placeholder=\"Enter Measurement Quantity\"\r\n                            class=\"form-control\"\r\n                            name=\"measurement_quantity\"\r\n                            value={measurement_quantity}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                         {errors.errors && <p style={styles.formError}>{errors.errors.measurement_quantity}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Measurement Type\r\n                        </label>\r\n                        <select\r\n                            name=\"measurement_type\"\r\n                            value={measurement_type}\r\n                            onChange={e => onChangeHandler(e)}\r\n                            id=\"inputState\"\r\n                            class=\"form-control\"\r\n                            style={{fontSize: '0.7em'}}>\r\n                            <option hidden selected>\r\n                                Choose\r\n                            </option>\r\n                            <option value=\"g\">Gram</option>\r\n                            <option value=\"kg\">Kilogram</option>\r\n                            <option value=\"cube\">Cube</option>\r\n                            <option value=\"piece\">Piece</option>\r\n                        </select>\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.measurement_type}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 mb-2 text-center\" style={{color: '#ff7417'}}>\r\n                        <h6 className=\"text-center block form-group col-md-12\">\r\n                            <b>Meal Extras</b>\r\n                        </h6>\r\n                    </div>\r\n\r\n                    {inputs.map((value, i) => (\r\n                        <div key={`meal_extra_${i}`}>\r\n                            <div className=\"from-group col-md-12 w-100\">\r\n                                <div class=\"form-row\">\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control\"\r\n                                            placeholder=\"Enter Extra Name\"\r\n                                            name=\"name\"\r\n                                            value={inputs[i].name}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                        />\r\n                                        {errors.errors && <p style={styles.formError}>{errors.errors.meal_extras}</p>}\r\n                                    </div>\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Price\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Extra Price\"\r\n                                            class=\"form-control\"\r\n                                            name=\"price\"\r\n                                            value={inputs[i].price}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Quantity\r\n                                        </label>\r\n                                        <input\r\n                                            class=\"form-control\"\r\n                                            placeholder=\"Enter Extra Quantity\"\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            name=\"measurement_quantity\"\r\n                                            value={inputs[i].measurement_quantity}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Measurement Type\r\n                                        </label>\r\n                                        <select\r\n                                            name=\"measurement_type\"\r\n                                            value={inputs[i].measurement_type}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                            id=\"inputState\"\r\n                                            class=\"form-control\"\r\n                                            style={{fontSize: '0.7em'}}>\r\n                                            <option hidden selected>\r\n                                                Choose\r\n                                            </option>\r\n                                            <option value=\"g\">Gram</option>\r\n                                            <option value=\"kg\">Kilogram</option>\r\n                                            <option value=\"cube\">Cube</option>\r\n                                            <option value=\"piece\">Piece</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                      \r\n                        </div>\r\n                    ))}\r\n                 {errors.errors && <p style={styles.formError}>{errors.errors.meal_extras}</p>}\r\n\r\n                    <div className=\"from-group col-md-12 text-center mt-4\">\r\n                        <button className=\"btn btn-style\" onClick={addNewExtraData}>\r\n                            Add More Meal Extras\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"from-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Description\r\n                        </label>\r\n                        <ReactQuill\r\n                            theme=\"snow\"\r\n                            name=\"description\"\r\n                            value={description}\r\n                            onChange={onDescriptionChange}\r\n                            row=\"3\"\r\n                            style={{height: '300px', marginBottom: '100px'}}\r\n                        />\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.description}</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlFile1\" style={styles.label}>\r\n                            Add Meal Image\r\n                        </label>\r\n                        <input\r\n                            type=\"file\"\r\n                            class=\"form-control-file\"\r\n                            name=\"image\"\r\n                            accept=\"image/png, image/jpeg\"\r\n                            onChange={e => onChangeImageHandler(e)}\r\n                        />\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.image}</p>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"from-group col-md-12  mt-4 mb-5\">\r\n                    <button\r\n                        className=\"btn btn-lg btn-block\"\r\n                        style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                        type=\"submit\"\r\n                        onClick={onSubmitHandle}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px'\r\n    }\r\n};\r\n\r\nexport default CreateMeals;\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditMeal.jsx",["465","466","467","468","469","470","471","472","473","474","475"],"import React, {useState, useEffect} from 'react';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport ReactQuill from 'react-quill';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport jsonToFormData from 'json-form-data';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nconst CreateMeals = props => {\r\n    const [errors, setError] = useState({});\r\n    const [loading, setLoading] = useState();\r\n    const [oldMealData, setOldMealData] = useState();\r\n    const [oldMealName, setOldMealName] = useState();\r\n    const [oldMealPrice, setOldMealPrice] = useState();\r\n    const [oldMealCategory, setOldMealCategory] = useState();\r\n    const [oldMealSubCategory, setOldMealSubCategory] = useState();\r\n    const [oldMealMeasurement_quantity, setOlMealMeasurement_quantity] = useState();\r\n    const [oldMealMeasurement_type, setOlMealMeasurement_type] = useState();\r\n    const [oldMealDescription, setOlMealDescription] = useState();\r\n    const [mealSlug, setMealSlug] = useState('');\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false,\r\n        message: ''\r\n    });\r\n    const [mealData, setMealtData] = useState({\r\n        name: oldMealName,\r\n        price: oldMealPrice,\r\n        category: oldMealCategory,\r\n        subcategory: oldMealSubCategory,\r\n        measurement_quantity: oldMealMeasurement_quantity,\r\n        measurement_type: oldMealMeasurement_type,\r\n        description: oldMealDescription,\r\n        image: null\r\n    });\r\n\r\n    const newMealExtraData = {\r\n        name: '',\r\n        price: 0,\r\n        measurement_type: '',\r\n        measurement_quantity: 0\r\n    };\r\n\r\n    const [inputs, setInputs] = useState([]);\r\n\r\n    //====== FOR ADD MEAL EXTRA========\r\n    const addNewExtraData = e => {\r\n        e.preventDefault();\r\n        let tempInputs = [...inputs];\r\n        tempInputs.push(newMealExtraData);\r\n        setInputs(tempInputs);\r\n        console.log(inputs);\r\n    };\r\n\r\n    //======ONCHANGE FOR MEAL EXTRA========\r\n    const onChange = (e, index) => {\r\n        let oldInput = [...inputs];\r\n        console.log(oldInput[index]);\r\n        oldInput[index][e.target.name] = e.target.value;\r\n        setInputs(oldInput);\r\n    };\r\n\r\n    const {subcategory, category, name, measurement_quantity, price, measurement_type, description, image} = mealData;\r\n\r\n    //======ONCHANGE FOR OTHER INPUTS========\r\n    const onChangeHandler = e => {\r\n        setMealtData({...mealData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    //======ONCHANGE FOR IMAGE========\r\n    const onChangeImageHandler = e => {\r\n        setMealtData({...mealData, image: e.target.files[0]});\r\n    };\r\n\r\n    //======ONCHANGE FOR CATEGORY TO AVOID TO RECALL THE SUBCATECORY AGAIN===========\r\n    const onCategoryChange = e => {\r\n        setMealtData({...mealData, category: e.target.value});\r\n        loadSubCategory(e.target.value);\r\n    };\r\n\r\n    // ===ONCHANGE FOR DESCRIPTION ==========\r\n    const onDescriptionChange = val => {\r\n        setMealtData({...mealData, description: val});\r\n    };\r\n\r\n    // ========== API CALL FOR THE CATEGORY LIST =======\r\n    const [categoryData, setCategoryData] = useState([]);\r\n    const loadCategory = () => {\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/category/list', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setCategoryData(res.data.categories);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadCategory();\r\n    }, []);\r\n\r\n    // ==============SUBCATEGORY LIST STATE =========\r\n\r\n    const [subcategoryData, setSubCategoryData] = useState([]);\r\n    const [notShow, setNotShow] = useState(true);\r\n    const loadSubCategory = category => {\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/subcategory/list/${category}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                console.log(res);\r\n                setSubCategoryData(res.data.subcategories);\r\n                setNotShow(false);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    //======USER GLOBAL STATE FROM REDUX=========\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    // ======SUBMIT FUNC ===========\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        let ad_form_data = {...mealData, meal_extras: inputs, meal:mealSlug };\r\n        console.log(ad_form_data);\r\n        const form_config = {\r\n            initialFormData: new FormData(),\r\n            showLeafArrayIndexes: true,\r\n            includeNullValues: false,\r\n            mapping: function(value) {\r\n                if (typeof value === 'boolean') {\r\n                    return +value ? '1' : '0';\r\n                }\r\n                return value;\r\n            }\r\n        };\r\n        const main_form_data = jsonToFormData(ad_form_data, form_config);\r\n\r\n        setLoading(true);\r\n        console.log(inputs);\r\n\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/meal/update`, main_form_data, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/active-meal-list');\r\n                }, 2000);\r\n            })\r\n            .catch(error => {\r\n                setError(error.response.data);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    // TO GET THE STATE WITH REACT-ROUTER FROM THE MEAL TABLE\r\n    let location = useLocation();\r\n    useEffect(() => {\r\n        setMealtData({\r\n            name: location.state.name,\r\n            price: location.state.price,\r\n            category: location.state.category,\r\n            subcategory: location.state.subcategory,\r\n            measurement_quantity: location.state.measurement_quantity,\r\n            measurement_type: location.state.measurement_type,\r\n            description: location.state.description\r\n        });\r\n        setInputs([\r\n            \r\n                ...location.state.extra_items\r\n            \r\n        ]);\r\n        setOldMealData(location.state.data);\r\n        setMealSlug(location.state.slug);\r\n    }, []);\r\n\r\n    console.log(mealData);\r\n    return (\r\n        <div className=\"making-page-centerelized container\">\r\n            {loading ? <Preloader /> : null}\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: true\r\n                        })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: false\r\n                        })}\r\n                />\r\n            ) : null}\r\n            <form className=\"mt-5\">\r\n                <div class=\"form-row\">\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Category\r\n                        </label>\r\n                        <select\r\n                            value={category}\r\n                            name=\"category\"\r\n                            onChange={e => onCategoryChange(e)}\r\n                            id=\"inputState\"\r\n                            class=\"form-control\"\r\n                            style={{fontSize: '0.7em'}}>\r\n                            <option hidden>\r\n                                {'>>>>'} Select Category {'<<<<'}\r\n                            </option>\r\n                            {categoryData.map(data => (\r\n                                <option\r\n                                    className=\"cursor\"\r\n                                    key={data.slug}\r\n                                    value={data.slug}\r\n                                    selected={category === data.slug ? true : false}>\r\n                                    {data.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.category}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Sub Category\r\n                        </label>\r\n                        <select\r\n                            style={{fontSize: '0.7em'}}\r\n                            className=\"form-control\"\r\n                            name=\"subcategory\"\r\n                            value={subcategory}\r\n                            onChange={e => onChangeHandler(e)}\r\n                            disabled={notShow}>\r\n                            <option hidden>\r\n                                {'>>>>'} select subcategory {'<<<<'}\r\n                            </option>\r\n                            {subcategoryData.map(data => (\r\n                                <option\r\n                                    className=\"cursor\"\r\n                                    key={data.slug}\r\n                                    value={data.slug}\r\n                                    selected={subcategory === data.slug ? true : false}>\r\n                                    {data.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.subcategory}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Meal Name\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Meal Name\"\r\n                            class=\"form-control\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.name}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Meal Price\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Meal Price\"\r\n                            class=\"form-control\"\r\n                            name=\"price\"\r\n                            value={price}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.price}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Measurement Quantity\r\n                        </label>\r\n                        <input\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            placeholder=\"Enter Measurement Quantity\"\r\n                            class=\"form-control\"\r\n                            name=\"measurement_quantity\"\r\n                            value={measurement_quantity}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.measurement_quantity}</p>}\r\n                    </div>\r\n                    <div class=\"form-group col-md-6\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Measurement Type\r\n                        </label>\r\n                        <select\r\n                            name=\"measurement_type\"\r\n                            value={measurement_type}\r\n                            onChange={e => onChangeHandler(e)}\r\n                            id=\"inputState\"\r\n                            class=\"form-control\"\r\n                            style={{fontSize: '0.7em'}}>\r\n                            <option hidden selected>\r\n                                Choose\r\n                            </option>\r\n                            <option value=\"g\">Gram</option>\r\n                            <option value=\"kg\">Kilogram</option>\r\n                            <option value=\"cube\">Cube</option>\r\n                            <option value=\"piece\">Piece</option>\r\n                        </select>\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.measurement_type}</p>}\r\n                    </div>\r\n\r\n                    <div className=\"mt-5 mb-2 text-center\" style={{color: '#ff7417'}}>\r\n                        <h6 className=\"text-center block form-group col-md-12\">\r\n                            <b>Meal Extras</b>\r\n                        </h6>\r\n                    </div>\r\n\r\n                    {inputs.map((value, i) => (\r\n                        <div key={`meal_extra_${i}`}>\r\n                            <div className=\"from-group col-md-12 w-100\">\r\n                                <div class=\"form-row\">\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Name\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control\"\r\n                                            placeholder=\"Enter Extra Name\"\r\n                                            name=\"name\"\r\n                                            value={inputs[i].name}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                        />\r\n                                        {errors.errors && <p style={styles.formError}>{errors.errors.meal_extras}</p>}\r\n                                    </div>\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Price\r\n                                        </label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Extra Price\"\r\n                                            class=\"form-control\"\r\n                                            name=\"price\"\r\n                                            value={inputs[i].price}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Quantity\r\n                                        </label>\r\n                                        <input\r\n                                            class=\"form-control\"\r\n                                            placeholder=\"Enter Extra Quantity\"\r\n                                            type=\"number\"\r\n                                            min=\"1\"\r\n                                            name=\"measurement_quantity\"\r\n                                            value={inputs[i].measurement_quantity}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"from-group col-md-3\">\r\n                                        <label style={styles.label} for=\"inputState\">\r\n                                            Measurement Type\r\n                                        </label>\r\n                                        <select\r\n                                            name=\"measurement_type\"\r\n                                            value={inputs[i].measurement_type}\r\n                                            onChange={(e, index = i) => onChange(e, index)}\r\n                                            id=\"inputState\"\r\n                                            class=\"form-control\"\r\n                                            style={{fontSize: '0.7em'}}>\r\n                                            <option hidden selected>\r\n                                                Choose\r\n                                            </option>\r\n                                            <option value=\"g\">Gram</option>\r\n                                            <option value=\"kg\">Kilogram</option>\r\n                                            <option value=\"cube\">Cube</option>\r\n                                            <option value=\"piece\">Piece</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                    ))}\r\n                    {errors.errors && <p style={styles.formError}>{errors.errors.meal_extras}</p>}\r\n\r\n                    <div className=\"from-group col-md-12 text-center mt-4\">\r\n                        <button className=\"btn btn-style\" onClick={addNewExtraData}>\r\n                            Add More Meal Extras\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"from-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputState\">\r\n                            Description\r\n                        </label>\r\n                        <ReactQuill\r\n                            theme=\"snow\"\r\n                            name=\"description\"\r\n                            value={description}\r\n                            onChange={onDescriptionChange}\r\n                            row=\"3\"\r\n                            style={{height: '300px', marginBottom: '100px'}}\r\n                        />\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.description}</p>}\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"exampleFormControlFile1\" style={styles.label}>\r\n                            Add Meal Image\r\n                        </label>\r\n                        <input\r\n                            type=\"file\"\r\n                            class=\"form-control-file\"\r\n                            name=\"image\"\r\n                            accept=\"image/png, image/jpeg\"\r\n                            onChange={e => onChangeImageHandler(e)}\r\n                        />\r\n                        {errors.errors && <p style={styles.formError}>{errors.errors.image}</p>}\r\n                    </div>\r\n                </div>\r\n                <div className=\"from-group col-md-12  mt-4 mb-5\">\r\n                    <button\r\n                        className=\"btn btn-lg btn-block\"\r\n                        style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                        type=\"submit\"\r\n                        onClick={onSubmitHandle}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px'\r\n    }\r\n};\r\n\r\nexport default CreateMeals;\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveChef.jsx",["476"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ActiveChefView from '../ReuseableCompononts/ActiveChefView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\n\r\nexport default function ActiveChef(props) {\r\n    const [stateData,setStateData] = useState([]);\r\n    const [chef,setChef] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n  \r\n\r\n    const  loadData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/chef/list/active', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setStateData(res.data.chefs.data);\r\n                setNextPageUrl(res.data.chefs.next_page_url);\r\n                setLoading(false);\r\n               \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setChef(res.data);\r\n                setNextPageUrl(res.data.chefs.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setStateData(stateData.concat(...res.data.chefs.data));\r\n            });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {stateData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No chef Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Name</th> \r\n                            <th>Location</th> \r\n                            <th>Phone</th> \r\n                            <th className=\"text-right\">Action</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {stateData.map(data => <ActiveChefView data={data} {...props}  loadData={loadData} />)}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={stateData.length}\r\n                            next={nextData}\r\n                            hasMore={chef.current_page !== chef.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Auth\\Login.jsx",["477","478","479","480"],"import {useEffect, useState} from 'react';\r\nimport {signin} from '../../Redux/actions';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport PreloaderImg from '../../images/preloader1.gif';\r\n\r\nexport default function Login(props) {\r\n    const dispatch = useDispatch();\r\n\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {loading, user, error} = userSignin;\r\n    const [formData, setFormData] = useState({\r\n        identifier: '',\r\n        password: ''\r\n    });\r\n\r\n    const {identifier, password} = formData;\r\n    const onChangeHandler = e => {\r\n        setFormData({...formData, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        dispatch(signin(identifier, password)).then(() => {}).then(() => {\r\n           \r\n                props.history.push('/dashboard');\r\n                // window.location.reload();\r\n\r\n        })\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login container\">\r\n            {loading ? <Preloader /> : null}\r\n            <div className=\"card border-0 shadow \" style={{backgroundColor: '#ff7417', marginTop: '20%'}}>\r\n                <div className=\"card-body\">\r\n                    <from>\r\n                        <div className=\"from-row\">\r\n                            <div class=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"inputCity\">\r\n                                    Email\r\n                                </label>\r\n                                <input\r\n                                    value={identifier}\r\n                                    name=\"identifier\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    class=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.identifier}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors.email}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors.phone}</p>}\r\n                                {error && <p style={styles.formError}>{error.errors.username}</p>}\r\n                            </div>\r\n                            <div class=\"form-group col-md-12\">\r\n                                <label style={styles.label} for=\"inputCity\">\r\n                                    Password\r\n                                </label>\r\n                                <input\r\n                                    value={password}\r\n                                    name=\"password\"\r\n                                    onChange={e => onChangeHandler(e)}\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    class=\"form-control\"\r\n                                />\r\n                                {error && <p style={styles.formError}>{error.errors.password}</p>}\r\n                            </div>\r\n\r\n                            <div class=\"form-group col-md-12\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    onClick={onSubmitHandle}\r\n                                    className=\"btn  btn-block\"\r\n                                    style={{color: 'white', backgroundColor: 'black'}}>\r\n                                    SignIn\r\n                                </button>\r\n                            </div>\r\n                            {/* <div class=\"form-group col-md-12\">\r\n                                <p className=\"btn\" style={{color: 'black', fontWeight: 'bold'}}>\r\n                                    Forget Password\r\n                                </p>\r\n                            </div> */}\r\n                        </div>\r\n                    </from>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold',\r\n        color: 'black'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ActiveLocationList.jsx",["481","482"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ActiveLocationView from '../ReuseableCompononts/ActiveLocationView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\nexport default function ActiveLocationList(props) {\r\n    const [stateData,setStateData] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n  \r\n\r\n    const  loadLocationData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/place/list/enabled', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setStateData(res.data.places);\r\n                setLoading(false);\r\n               \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadLocationData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {stateData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Location Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Name</th> \r\n                            <th className=\"text-right\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {stateData.map(data => <ActiveLocationView data={data} {...props}  loadLocationData={loadLocationData } />)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditLocation.jsx",["483","484","485"],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nexport default function EditLocation(props) {\r\n    const [location, setLocation] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false, \r\n        message: \"\"\r\n    });\r\n    const [Errormessage, setErrorMessage] = useState();\r\n    const [ErrorName, setErrorName] = useState();\r\n    const [show, setShow] = useState(false);\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const {name} = location;\r\n    const onChangeHandler = e => {\r\n        setLocation({...location, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    // ======= Got STATE FROM ROUTER =====\r\n    let routeData = useLocation();\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        const payload = new FormData();\r\n        payload.append('name', location.name);\r\n        setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/place/update/${routeData.state.slug}`, payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/active-location-list');\r\n                }, 2000);\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.message);\r\n                setErrorName(error.response.data.errors.name);\r\n                console.log(Errormessage);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    \r\nuseEffect(() => {\r\n    setLocation({\r\n        name: routeData.state.name  \r\n     })\r\n}, [])\r\n\r\n    return (\r\n        <div className=\"cat-subcat container\">\r\n            {loading ? <Preloader /> : null}\r\n\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: true,\r\n                    })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: false,\r\n                    })}\r\n                />\r\n            ) : null}\r\n\r\n            <form style={{marginTop: '30%'}}>\r\n                <div classsName=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Location New Name\r\n                        </label>\r\n                        <input\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder=\"Enter Location Name\"\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group col-md-12\">\r\n                        <button\r\n                            className=\"btn btn-sm btn-block\"\r\n                            style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                            type=\"submit\"\r\n                            onClick={onSubmitHandle}>\r\n                            Edit\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\BlockedChef.jsx",["486"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport BlockedChefView from '../ReuseableCompononts/BlockedChefView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\n\r\nexport default function BlockedChef(props) {\r\n    const [stateData,setStateData] = useState([]);\r\n    const [chef,setChef] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n  \r\n\r\n    const  loadData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/chef/list/blocked', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setStateData(res.data.chefs.data);\r\n                setNextPageUrl(res.data.chefs.next_page_url);\r\n                setLoading(false);\r\n               \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setChef(res.data);\r\n                setNextPageUrl(res.data.chefs.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setStateData(stateData.concat(...res.data.chefs.data));\r\n            });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {stateData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Blocked chef Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Name</th> \r\n                            <th>Location</th> \r\n                            <th>Phone</th> \r\n                            <th className=\"text-right\">Action</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {stateData.map(data => <BlockedChefView data={data} {...props}  loadData={loadData} />)}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={stateData.length}\r\n                            next={nextData}\r\n                            hasMore={chef.current_page !== chef.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\PasswordChange.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditCategory.jsx",["487","488","489"],"import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport {useLocation } from \"react-router-dom\"\r\n\r\nexport default function EditCategory(props) {\r\n\r\n    const [category, setCategory] = useState({\r\n        name: ''\r\n    });\r\n\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false, \r\n        message: \"\"\r\n    });\r\n    const [Errormessage, setErrorMessage] = useState();\r\n    const [ErrorName, setErrorName] = useState();\r\n    const [show, setShow] = useState(false);\r\n    const [oldCategoryName, setOldCategoryName] = useState('')\r\n    const [categorySlug, setCategorySlug] = useState('')\r\n\r\n\r\n// TO GET THE STATE WITH REACT-ROUTER FROM THE CATEGORTY TABLE\r\nlet location = useLocation();\r\nuseEffect(() => {\r\n    setOldCategoryName(location.state.name)\r\n    setCategorySlug(location.state.slug)\r\n}, [])\r\n\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const {name} = category;\r\n    const onChangeHandler = e => {\r\n        setCategory({...category, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        const payload = new FormData();\r\n        payload.append('name', category.name);\r\n        setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/category/update/${categorySlug}`, payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/category-list');\r\n                }, 2000)\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.message);\r\n                setErrorName(error.response.data.errors.name);\r\n                console.log(Errormessage);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"cat-subcat container\"> \r\n            {loading ? <Preloader /> : null}\r\n\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: true,\r\n                    })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() => setSuccessmessage({\r\n                        ...Successmessage,\r\n                        status: false,\r\n                    })}\r\n                />\r\n            ) : null}\r\n\r\n            <form style={{marginTop: '30%'}}>\r\n                <div classsName=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            New Category Name\r\n                        </label>\r\n                        <input\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder={oldCategoryName}\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group col-md-12\">\r\n                        <button\r\n                            className=\"btn btn-sm btn-block\"\r\n                            style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                            type=\"submit\"\r\n                            onClick={onSubmitHandle}>\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\EditSubCategory.jsx",["490","491","492","493","494"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport {useLocation} from 'react-router-dom';\r\n\r\nexport default function EditSubCategory(props) {\r\n    const [subCategory, setSubCategory] = useState({\r\n        name: '',\r\n        category: ''\r\n    });\r\n    const [categoryData, setCategoryData] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false,\r\n        message: ''\r\n    });\r\n    const [Errormessage, setErrorMessage] = useState();\r\n    const [ErrorName, setErrorName] = useState();\r\n    const [show, setShow] = useState(false);\r\n    const [oldSubCategoryName, setOldSubCategoryName] = useState('');\r\n    const [subCategorySlug, setSubCategorySlug] = useState('');\r\n    const [oldcategory, setOldCategory] = useState('');\r\n\r\n    // TO GET THE STATE WITH REACT-ROUTER FROM THE CATEGORTY TABLE\r\n    let location = useLocation();\r\n    useEffect(() => {\r\n        setOldSubCategoryName(location.state.name);\r\n        setSubCategorySlug(location.state.slug);\r\n        setOldCategory(location.state.category)\r\n    }, []);\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const {name, category} = subCategory;\r\n    const onChangeHandler = e => {\r\n        setSubCategory({...subCategory, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    // ========== API CALL FOR THE CATEGORY LIST\r\n    const loadCategory = () => {\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/category/list', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setCategoryData(res.data.categories);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        loadCategory()   \r\n     }, [])\r\n\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        const payload = new FormData();\r\n        payload.append('name', subCategory.name);\r\n        payload.append('category', subCategory.category);\r\n        setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/subcategory/update/${subCategorySlug}`, payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.message\r\n                });\r\n                setLoading(false);\r\n                setTimeout(() => {\r\n                    props.history.push('/sub-category-list');\r\n                }, 2000);\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.message);\r\n                setErrorName(error.response.data.errors.name);\r\n                console.log(Errormessage);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n \r\n\r\n    return (\r\n        <div className=\"cat-subcat container\">\r\n            {loading ? <Preloader /> : null}\r\n\r\n            {Successmessage.status ? (\r\n                <SweetAlert\r\n                    show={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: true\r\n                        })}\r\n                    title=\"Success message\"\r\n                    text={Successmessage.message}\r\n                    onConfirm={() =>\r\n                        setSuccessmessage({\r\n                            ...Successmessage,\r\n                            status: false\r\n                        })}\r\n                />\r\n            ) : null}\r\n\r\n            <form style={{marginTop: '30%'}}>\r\n                <div classsName=\"form-row\">\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            Sub Category Name\r\n                        </label>\r\n                        <select name=\"category\"  onChange={e => onChangeHandler(e)} id=\"inputState\" class=\"form-control\" style={{fontSize: '0.7em'}}>\r\n                            <option hidden>\r\n                                {'>>>>'} Choose  Category {'<<<<'}\r\n                            </option>\r\n                            {categoryData.map(data => (\r\n                                <option\r\n                                    className=\"cursor\"\r\n                                    key={data.slug}\r\n                                    value={data.slug}\r\n                                    selected={category === data.slug ? true : false}>\r\n                                    {data.name}\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div class=\"form-group col-md-12\">\r\n                        <label style={styles.label} for=\"inputCity\">\r\n                            New Sub Category Name\r\n                        </label>\r\n                        <input\r\n                            class=\"form-control\"\r\n                            type=\"text\"\r\n                            placeholder={oldSubCategoryName}\r\n                            name=\"name\"\r\n                            value={name}\r\n                            onChange={e => onChangeHandler(e)}\r\n                        />\r\n                        <p style={styles.formError}>\r\n                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"form-group col-md-12\">\r\n                        <button\r\n                            className=\"btn btn-sm btn-block\"\r\n                            style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                            type=\"submit\"\r\n                            onClick={onSubmitHandle}>\r\n                            update\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\Dashboard.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\reducers.js",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\Preloader.js",["495"],"import React from 'react';\r\nimport PreloaderImg from '../../images/preloader1.gif';\r\n\r\nexport default function Preloader() {\r\n    return (\r\n        <div>\r\n            <div className=\"overlay\">\r\n                <div className=\"spinner\">\r\n                <img style={{width: \"50px\" , height: \"50px\"}} src={PreloaderImg} />\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\actions.js",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\NewOrderListView.jsx",["496","497","498","499"],"import React from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {IoMdCheckmarkCircle} from 'react-icons/io';\r\nimport {MdShoppingCart} from 'react-icons/md';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Naira from 'react-naira';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Moment from \"react-moment\";\r\n\r\nexport default function NewOrderListView(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const [openUser, setOpenUser] = React.useState(false);\r\n\r\n    const handleClickOpenUser = () => {\r\n        setOpenUser(true);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setOpenUser(false);\r\n    };\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const cancelOrder = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/order/set_status`,{\r\n                order_id: props.data.id,\r\n                new_status: \"cancelled\",\r\n            } ,{\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUOrderData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n    const acceptOrrder = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/order/set_status`,  \r\n            {\r\n                order_id: props.data.id,\r\n                new_status: \"confirmed\",\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUOrderData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.code}</td>\r\n            <td>3</td>\r\n            <td><Moment format=\"D MMM YYYY\" withTitle>{props.data.created_at}</Moment></td>\r\n            <td>\r\n                <span class=\"badge badge-success\">{props.data.status}</span>\r\n            </td>\r\n            <td>{props.data.delivery_type}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => acceptOrrder()}\r\n                        title=\"Accept Oder\">\r\n                        <IoMdCheckmarkCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"Cancel Oder\"\r\n                        onClick={() => cancelOrder()}\r\n                        >\r\n                        <GiCancel />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        onClick={() =>  handleClickOpen()}\r\n                        data-target=\"#viewOrderModal\"\r\n                        data-placement=\"top\"\r\n                       \r\n                        title=\"View Order\">\r\n                        <MdShoppingCart style={{color: 'white'}} />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={() =>  handleClickOpenUser()}\r\n                        title=\"View User\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">{props.data.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            {props.data.ordered_meals.map(data => (\r\n                                <div key={data.id}>\r\n                                     <h5 className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}><u>Person: {data.name}</u></h5>\r\n                                    <h6 className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}> Meal</h6>\r\n                                    <div className=\"block mb-3\">\r\n                                        <img src={data.meal.image} style={{height: '100%', width: '100%'}} />\r\n                                    </div>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Meal Name</b>:<span className=\"ml-2\">{data.meal.name}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal.measurement_quantity}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal.measurement_type}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Price</b>:<span className=\"ml-2\">\r\n                                            <Naira>{data.meal.price}</Naira>\r\n                                        </span>\r\n                                    </p>\r\n                                   \r\n                                    <h6 className=\"mt-3 mb-3\"   className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}>Ordered Meals Extras</h6>\r\n                                    {data.ordered_meal_extra_items.map(data => (\r\n                                        <div key={data.id}>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">{data.cost}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Quantity</b>:<span className=\"ml-2\">{data.quantity}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Meal Name</b>:<span className=\"ml-2\">{data.meal_extra_item.name}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_quantity}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_type}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">\r\n                                                    <Naira>{data.meal_extra_item.price}</Naira>\r\n                                                </span>\r\n                                            </p>\r\n                                            <hr/>\r\n                                        </div>\r\n                                    ))}\r\n                                   \r\n                                </div>\r\n                            ))}\r\n                            <h6 className=\"mt-3 mb-3\"  className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}>Ordered Summery</h6>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Delivery Type</b>\r\n                                <span className=\"ml-2\">{props.data.delivery_type}</span>\r\n                            </p>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Order Type</b>\r\n                                <span className=\"ml-2\">{props.data.type}</span>\r\n                            </p>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Address</b>\r\n                                <span className=\"ml-2\">{props.data.address}</span>\r\n                            </p>\r\n                            <p  style={{fontWeight: \"bolder\",  color: \"black\"}}>\r\n                                <b>Total Price</b> =\r\n                                <span className=\"ml-2\">\r\n                                    <Naira>{props.data.total}</Naira>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n            <Dialog\r\n                open={openUser}\r\n                onClose={handleCloseUser}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                            <p className=\"mt-3\" style={{color: 'black', fontSize: \"0.9\" }}><span>{props.data.user.last_name}</span><span className=\"m-2\">{props.data.user.first_name}</span></p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.user.email}</p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.user.phone}</p>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleCloseUser}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ConfirmedOrderListView.jsx",["500","501","502","503"],"import React, {useState} from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {MdShoppingCart} from 'react-icons/md';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Naira from 'react-naira';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from './Preloader';\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport {RiEBike2Line} from 'react-icons/ri';\r\nimport Moment from \"react-moment\"\r\n\r\nexport default function ConfirmedOrderListView(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const [openUser, setOpenUser] = React.useState(false);\r\n\r\n    const handleClickOpenUser = () => {\r\n        setOpenUser(true);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setOpenUser(false);\r\n    };\r\n\r\n    const [openForm, setOpenForm] = React.useState(false);\r\n\r\n    const handleClickOpenForm = () => {\r\n        setOpenForm(true);\r\n    };\r\n\r\n    const handleCloseForm = () => {\r\n        setOpenForm(false);\r\n    };\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const cancelOrder = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .post(\r\n                `https://server.wakafoods.com/api/admin/order/set_status`,\r\n                {\r\n                    order_id: props.data.id,\r\n                    new_status: 'cancelled'\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user}`,\r\n                        'Content-Type': 'application/json',\r\n                        Accept: 'application/json'\r\n                    }\r\n                }\r\n            )\r\n            .then(res => {\r\n               \r\n                props.loadUOrderData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n   \r\n\r\n    const [data, setData] = useState({\r\n        dispatcher_code: '',\r\n        new_status: \"dispatched\",\r\n    });\r\n    const [loading, setLoading] = useState();\r\n    const [Successmessage, setSuccessmessage] = useState({\r\n        status: false, \r\n        message: \"\"\r\n    });\r\n    const [Errormessage, setErrorMessage] = useState();\r\n    const [ErrorName, setErrorName] = useState();\r\n\r\n\r\n    const {dispatcher_code} = data;\r\n    const onChangeHandler = e => {\r\n        setData({...data, [e.target.name]: e.target.value});\r\n    };\r\n\r\n    const onSubmitHandle = e => {\r\n        e.preventDefault();\r\n        const payload = new FormData();\r\n        payload.append('dispatcher_code', data.dispatcher_code);\r\n        payload.append('dispatch_type', props.data.delivery_type);\r\n        payload.append('order_id', props.data.id);\r\n        payload.append('new_status', data.new_status);\r\n       \r\n        setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/order/set_status`, payload, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setOpenForm(false);\r\n                setSuccessmessage({\r\n                    status: true,\r\n                    message: res.data.messages\r\n                });\r\n                setLoading(false);\r\n               props.loadUOrderData();\r\n               \r\n         \r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(error.response.data.errors.dispatcher_code);\r\n                console.log(Errormessage);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.code}</td>\r\n            <td>3</td>\r\n            <td><Moment format=\"D MMM YYYY\" withTitle>{props.data.created_at}</Moment></td>\r\n            <td>\r\n                <span class=\"badge badge-success\">{props.data.status}</span>\r\n            </td>\r\n            <td>{props.data.delivery_type}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#deliverOrderModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => handleClickOpenForm()}\r\n                        title=\"Deliver Oder\">\r\n                        <RiEBike2Line />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"Cancel Oder\"\r\n                        onClick={() => cancelOrder()}>\r\n                        <GiCancel />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        onClick={() => handleClickOpen()}\r\n                        data-target=\"#viewOrderModal\"\r\n                        data-placement=\"top\"\r\n                        title=\"View Order\">\r\n                        <MdShoppingCart style={{color: 'white'}} />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => handleClickOpenUser()}\r\n                        title=\"View User\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">{props.data.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            {props.data.ordered_meals.map(data => (\r\n                                <div key={data.id}>\r\n                                    <h5 className=\"mt-3 mb-3\" style={{fontWeight: 'bolder', color: '#ff7417'}}>\r\n                                        <u>Person: {data.name}</u>\r\n                                    </h5>\r\n                                    <h6 className=\"mt-3 mb-3\" style={{fontWeight: 'bolder', color: '#ff7417'}}>\r\n                                        {' '}\r\n                                        Meal\r\n                                    </h6>\r\n                                    <div className=\"block mb-3\">\r\n                                        <img src={data.meal.image} style={{height: '100%', width: '100%'}} />\r\n                                    </div>\r\n                                    <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                        <b>Meal Name</b>:<span className=\"ml-2\">{data.meal.name}</span>\r\n                                    </p>\r\n                                    <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                        <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal.measurement_quantity}</span>\r\n                                    </p>\r\n                                    <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                        <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal.measurement_type}</span>\r\n                                    </p>\r\n                                    <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                        <b>Price</b>:<span className=\"ml-2\">\r\n                                            <Naira>{data.meal.price}</Naira>\r\n                                        </span>\r\n                                    </p>\r\n                                    \r\n                                    <h6\r\n                                        className=\"mt-3 mb-3\"\r\n                                        className=\"mt-3 mb-3\"\r\n                                        style={{fontWeight: 'bolder', color: '#ff7417'}}>\r\n                                        Ordered Meals Extras\r\n                                    </h6>\r\n                                    {data.ordered_meal_extra_items.map(data => (\r\n                                        <div key={data.id}>\r\n                                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">{data.cost}</span>\r\n                                            </p>\r\n                                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                                <b>Quantity</b>:<span className=\"ml-2\">{data.quantity}</span>\r\n                                            </p>\r\n                                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                                <b>Meal Name</b>:<span className=\"ml-2\">{data.meal_extra_item.name}</span>\r\n                                            </p>\r\n                                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                                <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_quantity}</span>\r\n                                            </p>\r\n                                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                                <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_type}</span>\r\n                                            </p>\r\n                                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">\r\n                                                    <Naira>{data.meal_extra_item.price}</Naira>\r\n                                                </span>\r\n                                            </p>\r\n                                            <hr />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ))}\r\n                            <h6\r\n                                className=\"mt-3 mb-3\"\r\n                                className=\"mt-3 mb-3\"\r\n                                style={{fontWeight: 'bolder', color: '#ff7417'}}>\r\n                                Ordered Summery\r\n                            </h6>\r\n                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                <b>Delivery Type</b>\r\n                                <span className=\"ml-2\">{props.data.delivery_type}</span>\r\n                            </p>\r\n                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                <b>Order Type</b>\r\n                                <span className=\"ml-2\">{props.data.type}</span>\r\n                            </p>\r\n                            <p style={{fontSize: '0.7em', color: 'black'}}>\r\n                                <b>Address</b>\r\n                                <span className=\"ml-2\">{props.data.address}</span>\r\n                            </p>\r\n                            <p style={{fontWeight: 'bolder', color: 'black'}}>\r\n                                <b>Total Price</b> =\r\n                                <span className=\"ml-2\">\r\n                                    <Naira>{props.data.total}</Naira>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openUser}\r\n                onClose={handleCloseUser}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                                <p className=\"mt-3\" style={{color: 'black', fontSize: '0.9'}}>\r\n                                    <span>{props.data.user.last_name}</span>\r\n                                    <span className=\"m-2\">{props.data.user.first_name}</span>\r\n                                </p>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.user.email}</p>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.user.phone}</p>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleCloseUser}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Dialog\r\n                open={openForm}\r\n                onClose={handleCloseForm}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            {loading ? <Preloader /> : null}\r\n\r\n                            {Successmessage.status ? (\r\n                                <SweetAlert\r\n                                    show={() =>\r\n                                        setSuccessmessage({\r\n                                            ...Successmessage,\r\n                                            status: true\r\n                                        })}\r\n                                    title=\"Success message\"\r\n                                    text={Successmessage.message}\r\n                                    onConfirm={() =>\r\n                                        setSuccessmessage({\r\n                                            ...Successmessage,\r\n                                            status: false\r\n                                        })}\r\n                                />\r\n                            ) : null}\r\n\r\n                            <form style={{marginTop: '30%'}}>\r\n                                <div classsName=\"form-row\">\r\n                                    <div class=\"form-group col-md-12\">\r\n                                        <label style={styles.label} for=\"inputCity\">\r\n                                        Dispatcher Code\r\n                                        </label>\r\n                                        <input\r\n                                            class=\"form-control\"\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Dispatcher Code\"\r\n                                            name=\"dispatcher_code\"\r\n                                            value={dispatcher_code}\r\n                                            onChange={e => onChangeHandler(e)}\r\n                                        />\r\n                                        <p style={styles.formError}>\r\n                                            {Errormessage !== undefined ? `${Errormessage} ${ErrorName}` : ''}\r\n                                        </p>\r\n                                    </div>\r\n                                    <div class=\"form-group col-md-12\">\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-block\"\r\n                                            style={{backgroundColor: '#ff7417', color: 'white'}}\r\n                                            type=\"submit\"\r\n                                            onClick={onSubmitHandle}>\r\n                                            Send\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleCloseForm}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: '0.9em',\r\n        fontWeight: 'bold'\r\n    },\r\n    formError: {\r\n        fontSize: '0.7em',\r\n        color: 'red',\r\n        marginTop: '10px',\r\n        fontWeight: 'bold'\r\n    }\r\n};","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\CancelledOrderListView.jsx",["504","505","506","507","508","509"],"import React from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {IoMdCheckmarkCircle} from 'react-icons/io';\r\nimport {MdShoppingCart} from 'react-icons/md';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Naira from 'react-naira';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Moment from \"react-moment\"\r\n\r\nexport default function CancelledOrderListView(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const [openUser, setOpenUser] = React.useState(false);\r\n\r\n    const handleClickOpenUser = () => {\r\n        setOpenUser(true);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setOpenUser(false);\r\n    };\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const cancelOrder = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/order/set_status`,{\r\n                order_id: props.data.id,\r\n                new_status: \"cancelled\",\r\n            } ,{\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUOrderData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n    const acceptOrrder = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/order/set_status`,  \r\n            {\r\n                order_id: props.data.id,\r\n                new_status: \"confirmed\",\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUOrderData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.code}</td>\r\n            <td>3</td>\r\n            <td><Moment format=\"D MMM YYYY\" withTitle>{props.data.created_at}</Moment></td>\r\n            <td>\r\n                <span class=\"badge badge-success\">{props.data.status}</span>\r\n            </td>\r\n            <td>{props.data.delivery_type}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => acceptOrrder()}\r\n                        title=\"Accept Oder\">\r\n                        <IoMdCheckmarkCircle />\r\n                    </button>\r\n                \r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        onClick={() =>  handleClickOpen()}\r\n                        data-target=\"#viewOrderModal\"\r\n                        data-placement=\"top\"\r\n                       \r\n                        title=\"View Order\">\r\n                        <MdShoppingCart style={{color: 'white'}} />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={() =>  handleClickOpenUser()}\r\n                        title=\"View User\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">{props.data.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            {props.data.ordered_meals.map(data => (\r\n                                <div key={data.id}>\r\n                                     <h5 className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}><u>Person: {data.name}</u></h5>\r\n                                    <h6 className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}> Meal</h6>\r\n                                    <div className=\"block mb-3\">\r\n                                        <img src={data.meal.image} style={{height: '100%', width: '100%'}} />\r\n                                    </div>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Meal Name</b>:<span className=\"ml-2\">{data.meal.name}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal.measurement_quantity}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal.measurement_type}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Price</b>:<span className=\"ml-2\">\r\n                                            <Naira>{data.meal.price}</Naira>\r\n                                        </span>\r\n                                    </p>\r\n                                   \r\n                                    <h6 className=\"mt-3 mb-3\"   className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}>Ordered Meals Extras</h6>\r\n                                    {data.ordered_meal_extra_items.map(data => (\r\n                                        <div key={data.id}>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">{data.cost}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Quantity</b>:<span className=\"ml-2\">{data.quantity}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Meal Name</b>:<span className=\"ml-2\">{data.meal_extra_item.name}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_quantity}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_type}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">\r\n                                                    <Naira>{data.meal_extra_item.price}</Naira>\r\n                                                </span>\r\n                                            </p>\r\n                                            <hr/>\r\n                                        </div>\r\n                                    ))}\r\n                                   \r\n                                </div>\r\n                            ))}\r\n                            <h6 className=\"mt-3 mb-3\"  className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}>Ordered Summery</h6>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Delivery Type</b>\r\n                                <span className=\"ml-2\">{props.data.delivery_type}</span>\r\n                            </p>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Order Type</b>\r\n                                <span className=\"ml-2\">{props.data.type}</span>\r\n                            </p>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Address</b>\r\n                                <span className=\"ml-2\">{props.data.address}</span>\r\n                            </p>\r\n                            <p  style={{fontWeight: \"bolder\",  color: \"black\"}}>\r\n                                <b>Total Price</b> =\r\n                                <span className=\"ml-2\">\r\n                                    <Naira>{props.data.total}</Naira>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n            <Dialog\r\n                open={openUser}\r\n                onClose={handleCloseUser}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                            <p className=\"mt-3\" style={{color: 'black', fontSize: \"0.9\" }}><span>{props.data.user.last_name}</span><span className=\"m-2\">{props.data.user.first_name}</span></p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.user.email}</p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.user.phone}</p>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleCloseUser}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\BlockedChefView.jsx",["510"],"import React from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {IoMdCheckmarkCircle} from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function BlockedChefView(props) {\r\n \r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const enableChef = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/chef/activate/${props.data.id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n          \r\n            <td>{props.data.name}</td>\r\n            <td>{props.data.place.name}</td>\r\n            <td>{props.data.phone}</td>\r\n           \r\n            <td className=\"text-right\">\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => enableChef()}\r\n                        title=\"Block State\">\r\n                        <IoMdCheckmarkCircle/>\r\n                    </button>\r\n                    <Link\r\n                        style={{color: 'inherit', textDecoration: 'inherit'}}\r\n                        to={{\r\n                            pathname: `/edit-location/${props.data.slug}`,\r\n                            state: props.data\r\n                        }}>\r\n                    </Link>\r\n                </div>\r\n            </td>\r\n\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ActiveChefView.jsx",["511"],"import React from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {AiOutlineEdit} from 'react-icons/ai';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function ActiveChefView(props) {\r\n \r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const disableChef = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/chef/block/${props.data.id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n          \r\n            <td>{props.data.name}</td>\r\n            <td>{props.data.place.name}</td>\r\n            <td>{props.data.phone}</td>\r\n           \r\n            <td className=\"text-right\">\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => disableChef()}\r\n                        title=\"Block State\">\r\n                        <GiCancel />\r\n                    </button>\r\n                    <Link\r\n                        style={{color: 'inherit', textDecoration: 'inherit'}}\r\n                        to={{\r\n                            pathname: `/edit-location/${props.data.slug}`,\r\n                            state: props.data\r\n                        }}>\r\n                    </Link>\r\n                </div>\r\n            </td>\r\n\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\BlockedLocationView.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ActiveLocationView.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ActiveDmanView.jsx",["512","513","514"],"import React from 'react';\r\nimport Pic from '../../images/pic.jpg';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function ActiveDmanView(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const disableUser = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/dispatcher/block/${props.data.code}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadDispatcherData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.code}</td>\r\n            <td>{props.data.name}</td>\r\n            <td>{props.data.state.name}</td>\r\n            <td>{props.data.town.name}</td>\r\n            <td>{props.data.type}</td>\r\n            <td>{props.data.deliveries_count}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={handleClickOpen}\r\n                        title=\"View Delivery Man\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => disableUser()}\r\n                        title=\"Block Delivery Man\">\r\n                        <GiCancel />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n\r\n            <Dialog \r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                                <img\r\n                                    src={props.data.avatar}\r\n                                    className=\"rounded-circle\"\r\n                                    style={{height: '200px', width: '200px', objectFit: 'cover'}}\r\n                                />\r\n                            </div>\r\n                            <p className=\"mt-3\" style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Name</b>\r\n                                </span>{' '}\r\n                                {props.data.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Code</b>\r\n                                </span>\r\n                                {props.data.code}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Type</b>\r\n                                </span>\r\n                                {props.data.type}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Email</b>\r\n                                </span>\r\n                                {props.data.email}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Phone</b>\r\n                                </span>\r\n                                {props.data.phone}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Address</b>\r\n                                </span>\r\n                                {props.data.address}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>State</b>\r\n                                </span>\r\n                                {props.data.state.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Town</b>\r\n                                </span>\r\n                                {props.data.town.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>LGA</b>\r\n                                </span>\r\n                                {props.data.lga.name}\r\n                            </p>\r\n                           \r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\UserBlocked.jsx",["515","516"],"import React from 'react';\r\nimport {IoMdCheckmarkCircle} from 'react-icons/io';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function UserBlocked(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const enableUser = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/user/activate/${props.data.id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUserData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>\r\n                <span>{props.data.last_name}</span>\r\n                <span className=\"m-2\">{props.data.first_name}</span>\r\n            </td>\r\n            <td>{props.data.title}</td>\r\n            <td>{props.data.email}</td>\r\n            <td>{props.data.phone}</td>\r\n            <td>{props.data.orders_count}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={handleClickOpen}\r\n                        title=\"View User\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => enableUser()}\r\n                        title=\"Enable User\">\r\n                        <IoMdCheckmarkCircle />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                                <img\r\n                                    src={props.data.avatar}\r\n                                    className=\"rounded-circle\"\r\n                                    style={{height: '200px', width: '200px', objectFit: 'cover'}}\r\n                                />\r\n                                <p className=\"mt-3\" style={{color: 'black', fontSize: '0.9'}}>\r\n                                    <span>{props.data.last_name}</span>\r\n                                    <span className=\"m-2\">{props.data.first_name}</span>\r\n                                </p>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.email}</p>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.phone}</p>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\DeliveringOdersView.jsx",["517","518","519","520","521","522"],"import React from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {IoMdCheckmarkCircle} from 'react-icons/io';\r\nimport {MdShoppingCart} from 'react-icons/md';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Naira from 'react-naira';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Moment from \"react-moment\"\r\nexport default function CancelledOrderListView(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const [openUser, setOpenUser] = React.useState(false);\r\n\r\n    const handleClickOpenUser = () => {\r\n        setOpenUser(true);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setOpenUser(false);\r\n    };\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const cancelOrder = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/order/set_status`,{\r\n                order_id: props.data.id,\r\n                new_status: \"cancelled\",\r\n            } ,{\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUOrderData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n    const acceptOrrder = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .post(`https://server.wakafoods.com/api/admin/order/set_status`,  \r\n            {\r\n                order_id: props.data.id,\r\n                new_status: \"completed\",\r\n            }, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUOrderData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.code}</td>\r\n            <td>3</td>\r\n            <td><Moment format=\"D MMM YYYY\" withTitle>{props.data.created_at}</Moment></td>\r\n            <td>\r\n                <span class=\"badge badge-success\">{props.data.status}</span>\r\n            </td>\r\n            <td>{props.data.delivery_type}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => acceptOrrder()}\r\n                        title=\"Confirm Delivered Oder\">\r\n                        <IoMdCheckmarkCircle />\r\n                    </button>\r\n                \r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        onClick={() =>  handleClickOpen()}\r\n                        data-target=\"#viewOrderModal\"\r\n                        data-placement=\"top\"\r\n                       \r\n                        title=\"View Order\">\r\n                        <MdShoppingCart style={{color: 'white'}} />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={() =>  handleClickOpenUser()}\r\n                        title=\"View User\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">{props.data.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            {props.data.ordered_meals.map(data => (\r\n                                <div key={data.id}>\r\n                                     <h5 className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}><u>Person: {data.name}</u></h5>\r\n                                    <h6 className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}> Meal</h6>\r\n                                    <div className=\"block mb-3\">\r\n                                        <img src={data.meal.image} style={{height: '100%', width: '100%'}} />\r\n                                    </div>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Meal Name</b>:<span className=\"ml-2\">{data.meal.name}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal.measurement_quantity}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal.measurement_type}</span>\r\n                                    </p>\r\n                                    <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                        <b>Price</b>:<span className=\"ml-2\">\r\n                                            <Naira>{data.meal.price}</Naira>\r\n                                        </span>\r\n                                    </p>\r\n                                   \r\n                                    <h6 className=\"mt-3 mb-3\"   className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}>Ordered Meals Extras</h6>\r\n                                    {data.ordered_meal_extra_items.map(data => (\r\n                                        <div key={data.id}>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">{data.cost}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Quantity</b>:<span className=\"ml-2\">{data.quantity}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Meal Name</b>:<span className=\"ml-2\">{data.meal_extra_item.name}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Measurement Quantity</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_quantity}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Measurement Type</b>:<span className=\"ml-2\">{data.meal_extra_item.measurement_type}</span>\r\n                                            </p>\r\n                                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                                <b>Price</b>:<span className=\"ml-2\">\r\n                                                    <Naira>{data.meal_extra_item.price}</Naira>\r\n                                                </span>\r\n                                            </p>\r\n                                            <hr/>\r\n                                        </div>\r\n                                    ))}\r\n                                   \r\n                                </div>\r\n                            ))}\r\n                            <h6 className=\"mt-3 mb-3\"  className=\"mt-3 mb-3\" style={{fontWeight: \"bolder\",  color: \"#ff7417\"}}>Ordered Summery</h6>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Delivery Type</b>\r\n                                <span className=\"ml-2\">{props.data.delivery_type}</span>\r\n                            </p>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Order Type</b>\r\n                                <span className=\"ml-2\">{props.data.type}</span>\r\n                            </p>\r\n                            <p  style={{fontSize: \"0.7em\" ,color: \"black\"}}>\r\n                                <b>Address</b>\r\n                                <span className=\"ml-2\">{props.data.address}</span>\r\n                            </p>\r\n                            <p  style={{fontWeight: \"bolder\",  color: \"black\"}}>\r\n                                <b>Total Price</b> =\r\n                                <span className=\"ml-2\">\r\n                                    <Naira>{props.data.total}</Naira>\r\n                                </span>\r\n                            </p>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n\r\n\r\n\r\n\r\n            <Dialog\r\n                open={openUser}\r\n                onClose={handleCloseUser}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                            <p className=\"mt-3\" style={{color: 'black', fontSize: \"0.9\" }}><span>{props.data.user.last_name}</span><span className=\"m-2\">{props.data.user.first_name}</span></p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.user.email}</p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.user.phone}</p>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleCloseUser}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\ChefNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\ReservationNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\Redux\\types.js",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\StateListNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\UserListNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\CategoryNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\DeliveryManListNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\MealListNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\SubCategoryNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\Navigation\\OrderListNav.jsx",[],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\PendingDmanView.jsx",["523","524"],"import React from 'react';\r\nimport Pic from '../../images/pic.jpg';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport {IoMdCheckmarkCircle} from \"react-icons/io\"\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function PendingDmanView(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const approveDman = () => {\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/dispatcher/activate/${props.data.code}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadDispatcherData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    const deleteDman = () => {\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/dispatcher/delete/${props.data.code}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadDspatcherData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.code}</td>\r\n            <td>{props.data.name}</td>\r\n            <td>{props.data.state.name}</td>\r\n            <td>{props.data.town.name}</td>\r\n            <td>{props.data.type}</td>\r\n            <td>{props.data.deliveries_count}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={handleClickOpen}\r\n                        title=\"View User\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => approveDman()}\r\n                        title=\"Approve Delivery Man\">\r\n                        <IoMdCheckmarkCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => deleteDman()}\r\n                        title=\"Block Delivery Man\">\r\n                        <GiCancel />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                                <img\r\n                                    src={props.data.avatar}\r\n                                    className=\"rounded-circle\"\r\n                                    style={{height: '200px', width: '200px', objectFit: 'cover'}}\r\n                                />\r\n                            </div>\r\n                            <p className=\"mt-3\" style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Name</b>\r\n                                </span>{' '}\r\n                                {props.data.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Code</b>\r\n                                </span>\r\n                                {props.data.code}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Type</b>\r\n                                </span>\r\n                                {props.data.type}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Email</b>\r\n                                </span>\r\n                                {props.data.email}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Phone</b>\r\n                                </span>\r\n                                {props.data.phone}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Address</b>\r\n                                </span>\r\n                                {props.data.address}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>State</b>\r\n                                </span>\r\n                                {props.data.state.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Town</b>\r\n                                </span>\r\n                                {props.data.town.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>LGA</b>\r\n                                </span>\r\n                                {props.data.lga.name}\r\n                            </p>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\BlockedDmanView.jsx",["525","526"],"import React from 'react';\r\nimport Pic from '../../images/pic.jpg';\r\nimport {IoMdCheckmarkCircle} from 'react-icons/io';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function BlockedDmanView(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const enableUser = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/dispatcher/activate/${props.data.code}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadDispatcherData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.code}</td>\r\n            <td>{props.data.name}</td>\r\n            <td>{props.data.state.name}</td>\r\n            <td>{props.data.town.name}</td>\r\n            <td>{props.data.type}</td>\r\n            <td>{props.data.deliveries_count}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        data-target=\"#userProfileModal\"\r\n                        data-placement=\"top\"\r\n                        onClick={handleClickOpen}\r\n                        title=\"View Delivery Man\">\r\n                        <FaRegUserCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => enableUser()}\r\n                        title=\"Enable Delivery Man\">\r\n                        <IoMdCheckmarkCircle/>\r\n                    </button>\r\n                </div>\r\n            </td>\r\n\r\n            <Dialog \r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                                <img\r\n                                    src={props.data.avatar}\r\n                                    className=\"rounded-circle\"\r\n                                    style={{height: '200px', width: '200px', objectFit: 'cover'}}\r\n                                />\r\n                            </div>\r\n                            <p className=\"mt-3\" style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Name</b>\r\n                                </span>{' '}\r\n                                {props.data.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Code</b>\r\n                                </span>\r\n                                {props.data.code}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Type</b>\r\n                                </span>\r\n                                {props.data.type}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Email</b>\r\n                                </span>\r\n                                {props.data.email}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Phone</b>\r\n                                </span>\r\n                                {props.data.phone}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Address</b>\r\n                                </span>\r\n                                {props.data.address}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>State</b>\r\n                                </span>\r\n                                {props.data.state.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>Town</b>\r\n                                </span>\r\n                                {props.data.town.name}\r\n                            </p>\r\n                            <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                <span className=\"mr-2\">\r\n                                    <b>LGA</b>\r\n                                </span>\r\n                                {props.data.lga.name}\r\n                            </p>\r\n                           \r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ViewMeal.jsx",["527","528"],"import React from 'react';\r\nimport Pic from '../../images/pic.jpg';\r\nimport {GiMeal} from 'react-icons/gi';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {AiOutlineEdit} from 'react-icons/ai';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Naira from 'react-naira';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function ViewMeal(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n  //======USER GLOBAL STATE FROM REDUX\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const {user} = userSignin;\r\n\r\n\r\n    const enableMeal = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/meal/make_unavailable/${props.data.slug}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadMealData()\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.name}</td>\r\n            <td><Naira>{props.data.price}</Naira></td>\r\n            <td>{props.data.measurement_quantity}</td>\r\n            <td>{props.data.measurement_type}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary btn-sm\"\r\n                        onClick={handleClickOpen}\r\n                        data-tooltip=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"View meal\">\r\n                        <GiMeal />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger btn-sm\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"Enable meal\"\r\n                        onClick={() => enableMeal()}\r\n                        >\r\n                        <GiCancel />\r\n                    </button>\r\n                    <Link\r\n                        style={{color: 'inherit', textDecoration: 'inherit'}}\r\n                        to={{\r\n                            pathname: `/edit-meal/${props.data.slug}`,\r\n                            state: props.data\r\n                        }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-success btn-sm\"\r\n                            data-toggle=\"tooltip\"\r\n                            data-placement=\"top\"\r\n                            title=\"Edit meal\">\r\n                            <AiOutlineEdit />\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">{props.data.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block mb-3\">\r\n                                <img src={props.data.image} style={{height: '100%', width: '100%'}} />\r\n                            </div>\r\n                            <p>\r\n                                <b>Price</b>:<span className=\"ml-2\">\r\n                                    <Naira>{props.data.price}</Naira>\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <b>Measurement Quantity</b>{' '}\r\n                                <span className=\"ml-2\">{props.data.measurement_quantity}</span>\r\n                            </p>\r\n                            <p>\r\n                                <b>Measurement Type</b>\r\n                                <span className=\"ml-2\">{props.data.measurement_type}</span>\r\n                            </p>\r\n                            <p>\r\n                                <b>category</b>\r\n                                <span className=\"ml-2\">{props.data.category}</span>\r\n                            </p>\r\n                            <p>\r\n                                <b>subcategory</b>\r\n                                <span className=\"ml-2\">{props.data.subcategory}</span>\r\n                            </p>\r\n                            <div className=\"mt-3 mb-3 text-center\">\r\n                                <h5 style={{color: '#ff7417'}}>Meal Extras</h5>\r\n                            </div>\r\n                            {props.data.extra_items.map(data => (\r\n                                <div>\r\n                                    <p>\r\n                                        <b>Name</b>:<span className=\"ml-2\">{data.name}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>Price</b>:<span className=\"ml-2\">\r\n                                            <Naira>{data.price}</Naira>\r\n                                        </span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>Measurement Quantity</b>{' '}\r\n                                        <span className=\"ml-2\">{data.measurement_quantity}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>Measurement Type</b>\r\n                                        <span className=\"ml-2\">{data.measurement_type}</span>\r\n                                    </p>\r\n                                    <hr/>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\UserActive.jsx",["529","530","531"],"import React from 'react';\r\nimport Pic from '../../images/pic.jpg';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {FaRegUserCircle} from 'react-icons/fa';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function UserActive(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n  //======USER GLOBAL STATE FROM REDUX\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const {user} = userSignin;\r\n\r\n\r\n    const disableUser = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/user/block/${props.data.id}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadUserData()\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n        <td><span>{props.data.last_name}</span><span className=\"m-2\">{props.data.first_name}</span></td>\r\n    <td>{props.data.title}</td>\r\n    <td>{props.data.email}</td>\r\n    <td>{props.data.phone}</td>\r\n    <td>{props.data.orders_count}</td>\r\n        <td>\r\n            <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    data-toggle=\"modal\"\r\n                    data-tooltip=\"tooltip\"\r\n                    data-target=\"#userProfileModal\"\r\n                    data-placement=\"top\"\r\n                    onClick={handleClickOpen}\r\n                    title=\"View User\">\r\n                    <FaRegUserCircle />\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    data-toggle=\"tooltip\"\r\n                    data-placement=\"top\"\r\n                    onClick={() => disableUser()}\r\n                    title=\"Block User\">\r\n                    <GiCancel />\r\n                </button>\r\n            </div>\r\n        </td>\r\n   \r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                            <img src={props.data.avatar} className=\"rounded-circle\" style={{height: '200px', width: '200px', objectFit: \"cover\"}} />\r\n                            <p className=\"mt-3\" style={{color: 'black', fontSize: \"0.9\" }}><span>{props.data.last_name}</span><span className=\"m-2\">{props.data.first_name}</span></p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.email}</p>\r\n                            <p style={{color: 'black', fontSize: \"0.7em\" }}>{props.data.phone}</p>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ViewMealDisable.jsx",["532","533","534","535"],"import React from 'react';\r\nimport Pic from '../../images/pic.jpg';\r\nimport {GiMeal} from 'react-icons/gi';\r\nimport {IoMdCheckmarkCircle} from 'react-icons/io';\r\nimport {AiOutlineEdit} from 'react-icons/ai';\r\nimport {Link} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Naira from 'react-naira';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport default function ViewMealDisable(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n  //======USER GLOBAL STATE FROM REDUX\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const {user} = userSignin;\r\n\r\n\r\n    const enableMeal = () => {\r\n        // setLoading(true);\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/meal/make_available/${props.data.slug}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadMealData()\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                // setLoading(false);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>{props.data.name}</td>\r\n            <td><Naira>{props.data.price}</Naira></td>\r\n            <td>{props.data.measurement_quantity}</td>\r\n            <td>{props.data.measurement_type}</td>\r\n            <td>\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary btn-sm\"\r\n                        onClick={handleClickOpen}\r\n                        data-tooltip=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"View meal\">\r\n                        <GiMeal />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success btn-sm\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        title=\"Disable meal\"\r\n                        onClick={() =>  enableMeal ()}\r\n                        >\r\n                        <IoMdCheckmarkCircle/>\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">{props.data.name}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block mb-3\">\r\n                                <img src={props.data.image} style={{height: '100%', width: '100%'}} />\r\n                            </div>\r\n                            <p>\r\n                                <b>Price</b>:<span className=\"ml-2\">\r\n                                    <Naira>{props.data.price}</Naira>\r\n                                </span>\r\n                            </p>\r\n                            <p>\r\n                                <b>Measurement Quantity</b>{' '}\r\n                                <span className=\"ml-2\">{props.data.measurement_quantity}</span>\r\n                            </p>\r\n                            <p>\r\n                                <b>Measurement Type</b>\r\n                                <span className=\"ml-2\">{props.data.measurement_type}</span>\r\n                            </p>\r\n                            <p>\r\n                                <b>category</b>\r\n                                <span className=\"ml-2\">{props.data.category}</span>\r\n                            </p>\r\n                            <p>\r\n                                <b>subcategory</b>\r\n                                <span className=\"ml-2\">{props.data.subcategory}</span>\r\n                            </p>\r\n                            <div className=\"mt-3 mb-3 text-center\">\r\n                                <h5 style={{color: '#ff7417'}}>Meal Extras</h5>\r\n                            </div>\r\n                            {props.data.extra_items.map(data => (\r\n                                <div>\r\n                                    <p>\r\n                                        <b>Name</b>:<span className=\"ml-2\">{data.name}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>Price</b>:<span className=\"ml-2\">\r\n                                            <Naira>{data.price}</Naira>\r\n                                        </span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>Measurement Quantity</b>{' '}\r\n                                        <span className=\"ml-2\">{data.measurement_quantity}</span>\r\n                                    </p>\r\n                                    <p>\r\n                                        <b>Measurement Type</b>\r\n                                        <span className=\"ml-2\">{data.measurement_type}</span>\r\n                                    </p>\r\n                                    <hr/>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\PendingReservation.jsx",["536"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport PendingReservationView from '../ReuseableCompononts/PendingReservationView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\n\r\nexport default function PendingReservation\r\n(props) {\r\n    const [stateData,setStateData] = useState([]);\r\n    const [table,setTable] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n  \r\n\r\n    const  loadData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/reservation/list/pending', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setStateData(res.data.table_reservations.data);\r\n                setNextPageUrl(res.data.table_reservations.next_page_url);\r\n                setLoading(false);\r\n               \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setTable(res.data);\r\n                setNextPageUrl(res.data.table_reservations.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setStateData(stateData.concat(...res.data.table_reservations.data));\r\n            });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {stateData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Pending Reservation Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Code</th> \r\n                            <th>Location</th> \r\n                            <th>Time</th> \r\n                            <th className=\"text-right\">Action</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {stateData.map(data => <PendingReservationView data={data} {...props}  loadData={loadData} />)}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={stateData.length}\r\n                            next={nextData}\r\n                            hasMore={table.current_page !== table.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\PendingReservationView.jsx",["537"],"import React from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {IoMdCheckmarkCircle, IoMdEye} from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Moment from 'react-moment';\r\n\r\nexport default function PendingReservationView(props) {\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const approveReservation = () => {\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/reservation/approve/${props.data.code}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n    const cancelledReservation = () => {\r\n        axios\r\n            .get(`https://server.wakafoods.com/api/admin/reservation/cancel/${props.data.code}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                props.loadData();\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>\r\n                {props.data.code} {props.data.user.last_name}\r\n            </td>\r\n            <td>{props.data.place.name}</td>\r\n            <td>\r\n                <Moment format=\"D MMM YYYY\" withTitle>\r\n                    {props.data.created_at}\r\n                </Moment>\r\n            </td>\r\n\r\n            <td className=\"text-right\">\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => approveReservation()}\r\n                        title=\"approve\">\r\n                        <IoMdCheckmarkCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => cancelledReservation()}\r\n                        title=\"cancel\">\r\n                        <GiCancel />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        onClick={() => handleClickOpen()}\r\n                        data-target=\"#viewOrderModal\"\r\n                        data-placement=\"top\"\r\n                        title=\"View\">\r\n                        <IoMdEye style={{color: 'white'}} />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                                <h3 class=\"mb-4\" style={{color: '#ff7417', fontSize: '0.7em', fontWeight: 'bolder'}}>\r\n                                    User Info\r\n                                </h3>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                    {props.data.user.title} {props.data.user.first_name} {props.data.user.last_name}\r\n                                </p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.user.email}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.user.phone}</p>\r\n                            </div>\r\n\r\n                            <div className=\"block text-center mb-5\">\r\n                                <h3 class=\"mb-4\" style={{color: '#ff7417', fontSize: '0.7em', fontWeight: 'bolder'}}>\r\n                                    Dispatcher Info\r\n                                </h3>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.name}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.email}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.address}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.phone}</p>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\ApprovedReservation.jsx",["538"],"import {useState,useEffect} from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ApprovedReservationView from '../ReuseableCompononts/ApprovedReservationView';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport Preloader from '../ReuseableCompononts/Preloader';\r\n\r\n\r\nexport default function PendingReservation\r\n(props) {\r\n    const [stateData,setStateData] = useState([]);\r\n    const [table,setTable] = useState([]);\r\n    const [loading, setLoading] = useState();\r\n    const [nextPageUrl, setNextPageUrl] = useState('');\r\n\r\n\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n  \r\n\r\n    const  loadData = () => {\r\n        setLoading(true);\r\n        axios\r\n            .get('https://server.wakafoods.com/api/admin/reservation/list/approved', {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setStateData(res.data.table_reservations.data);\r\n                setNextPageUrl(res.data.table_reservations.next_page_url);\r\n                setLoading(false);\r\n               \r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n\r\n    const nextData = () => {\r\n        setLoading(false);\r\n        axios\r\n            .get(nextPageUrl, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user}`,\r\n                    'Content-Type': 'application/json',\r\n                    Accept: 'application/json'\r\n                }\r\n            })\r\n            .then(res => {\r\n                setTable(res.data);\r\n                setNextPageUrl(res.data.table_reservations.next_page_url);\r\n                console.log('called next page: ', nextPageUrl);\r\n                setStateData(stateData.concat(...res.data.table_reservations.data));\r\n            });\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        loadData();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {loading && (\r\n                <div style={{height: '100vh', width: '100%'}}>\r\n                    <Preloader />\r\n                </div>\r\n            )}\r\n            {stateData.length < 1 ? (\r\n                <div style={{marginTop: '10%'}}>\r\n                    <p className=\"text-center\">\r\n                        <b>No Pending Reservation Found</b>\r\n                    </p>\r\n                </div>\r\n            ) : (\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead class=\"thead-light\" style={{fontSize: '0.7em', width: '50px'}}>\r\n                        <tr>\r\n                            <th>Code</th> \r\n                            <th>Location</th> \r\n                            <th>Time</th> \r\n                            <th className=\"text-right\">Action</th>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody style={{fontSize: '0.7em', width: '50px'}}>\r\n                    {stateData.map(data => <ApprovedReservationView data={data} {...props}  loadData={loadData} />)}\r\n                    </tbody>\r\n                    <InfiniteScroll\r\n                            dataLength={stateData.length}\r\n                            next={nextData}\r\n                            hasMore={table.current_page !== table.last_page ? true : false}\r\n                            loader={<h4 style={{textAlign: 'center', color: 'gray'}}>Loading...</h4>}\r\n                            endMessage={<p style={{textAlign: 'center'}} />}\r\n                        />\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\ApprovedReservationView.jsx",["539","540","541","542","543"],"import React from 'react';\r\nimport {GiCancel} from 'react-icons/gi';\r\nimport {IoMdCheckmarkCircle, IoMdEye} from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport {useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Button from '@material-ui/core/Button';\r\nimport Moment from \"react-moment\"\r\n\r\nexport default function ApprovedReservationView(props) {\r\n    //======USER GLOBAL STATE FROM REDUX\r\n    const userSignin = useSelector(state => state.userSignin);\r\n    const {user} = userSignin;\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    // const approveReservation = () => {\r\n    //     axios\r\n    //         .get(`https://server.wakafoods.com/api/admin/reservation/approve/${props.data.code}`, {\r\n    //             headers: {\r\n    //                 Authorization: `Bearer ${user}`,\r\n    //                 'Content-Type': 'application/json',\r\n    //                 Accept: 'application/json'\r\n    //             }\r\n    //         })\r\n    //         .then(res => {\r\n    //             props.loadData();\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //         });\r\n    // };\r\n    // const cancelledReservation = () => {\r\n    //     axios\r\n    //         .get(`https://server.wakafoods.com/api/admin/reservation/cancel/${props.data.code}`, {\r\n    //             headers: {\r\n    //                 Authorization: `Bearer ${user}`,\r\n    //                 'Content-Type': 'application/json',\r\n    //                 Accept: 'application/json'\r\n    //             }\r\n    //         })\r\n    //         .then(res => {\r\n    //             props.loadData();\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.log(error);\r\n    //         });\r\n    // };\r\n\r\n    return (\r\n        <tr key={props.data.id}>\r\n            <td>\r\n                {props.data.code} {props.data.user.last_name}\r\n            </td>\r\n            <td>{props.data.place.name}</td>\r\n            <td><Moment format=\"D MMM YYYY\" withTitle>{props.data.created_at}</Moment></td>\r\n\r\n            <td className=\"text-right\">\r\n                <div class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"...\">\r\n                    {/* <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() => approveReservation()}\r\n                        title=\"approve\">\r\n                        <IoMdCheckmarkCircle />\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-danger\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"top\"\r\n                        onClick={() =>  cancelledReservation()}\r\n                        title=\"cancel\">\r\n                        <GiCancel />\r\n                    </button> */}\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-secondary\"\r\n                        data-toggle=\"modal\"\r\n                        data-tooltip=\"tooltip\"\r\n                        onClick={() => handleClickOpen()}\r\n                        data-target=\"#viewOrderModal\"\r\n                        data-placement=\"top\"\r\n                        title=\"View\">\r\n                        <IoMdEye style={{color: 'white'}} />\r\n                    </button>\r\n                </div>\r\n            </td>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\">\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <div className=\"container-lg \">\r\n                            <div className=\"block text-center mb-5\">\r\n                                <h3 class=\"mb-4\" style={{color: '#ff7417', fontSize: '0.7em', fontWeight: 'bolder'}}>\r\n                                    User Info\r\n                                </h3>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>\r\n                                    {props.data.user.title} {props.data.user.first_name} {props.data.user.last_name}\r\n                                </p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.user.email}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.user.phone}</p>\r\n                            </div>\r\n\r\n                            <div className=\"block text-center mb-5\">\r\n                                <h3 class=\"mb-4\" style={{color: '#ff7417', fontSize: '0.7em', fontWeight: 'bolder'}}>\r\n                                    Dispatcher Info\r\n                                </h3>\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.name}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.email}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.address}</p>\r\n                                <hr />\r\n                                <p style={{color: 'black', fontSize: '0.7em'}}>{props.data.dispatcher.phone}</p>\r\n                            </div>\r\n                        </div>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        style={{color: 'white', backgroundColor: '#ff7417'}}\r\n                        onClick={handleClose}\r\n                        color=\"primary\"\r\n                        autoFocus>\r\n                        Close\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </tr>\r\n    );\r\n}\r\n","C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\User\\CancelledReservation.jsx",["544"],"C:\\Users\\HP\\waka-meals-admin\\src\\AppComponents\\ReuseableCompononts\\CancelledReservationView.jsx",["545","546","547","548","549"],"C:\\Users\\HP\\waka-meals-chef\\src\\index.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\App.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\PrivateRoute.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\store.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Navigation\\HeaderNav.jsx",["550","551","552","553"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\PasswordChange.jsx",[],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\Login.jsx",[],"C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\reducers.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\actions.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\Preloader.js",["554"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Navigation\\OrderListNav.jsx",["555"],"C:\\Users\\HP\\waka-meals-chef\\src\\Redux\\types.js",[],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\Signup.jsx",["556","557","558","559"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\Dashboard.jsx",[],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\OpenedOrderList.jsx",["560"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\OpenedOrderView.jsx",["561","562","563","564","565"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\CompeletedOrderList.jsx",["566"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\CompeletedOrderView.jsx",["567","568","569","570","571","572","573","574"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\ForgotPassword.jsx",["575","576"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\Auth\\SetNewPassword.jsx",["577","578","579","580"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\InKitchenOrderList.jsx",["581"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\User\\AlmostReadyOrderList.jsx",["582"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\InKitchenOrderView.jsx",["583","584","585","586","587"],"C:\\Users\\HP\\waka-meals-chef\\src\\AppComponents\\ReuseableCompononts\\AlmostReadyOrderView.jsx",["588","589","590","591","592"],{"ruleId":"593","replacedBy":"594"},{"ruleId":"595","replacedBy":"596"},{"ruleId":"597","severity":1,"message":"598","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"600"},{"ruleId":"601","severity":1,"message":"602","line":11,"column":17,"nodeType":"603","endLine":11,"endColumn":54},{"ruleId":"604","severity":1,"message":"605","line":13,"column":21,"nodeType":"603","endLine":13,"endColumn":66},{"ruleId":"601","severity":1,"message":"602","line":36,"column":29,"nodeType":"603","endLine":36,"endColumn":73},{"ruleId":"601","severity":1,"message":"602","line":37,"column":33,"nodeType":"603","endLine":37,"endColumn":103},{"ruleId":"597","severity":1,"message":"598","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"606"},{"ruleId":"597","severity":1,"message":"598","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"607"},{"ruleId":"597","severity":1,"message":"598","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"608"},{"ruleId":"597","severity":1,"message":"598","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"609"},{"ruleId":"597","severity":1,"message":"610","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"611"},{"ruleId":"597","severity":1,"message":"612","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"613"},{"ruleId":"597","severity":1,"message":"612","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"614"},{"ruleId":"597","severity":1,"message":"610","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"615"},{"ruleId":"616","severity":1,"message":"617","line":11,"column":12,"nodeType":"618","messageId":"619","endLine":11,"endColumn":20},{"ruleId":"597","severity":1,"message":"620","line":66,"column":8,"nodeType":"599","endLine":66,"endColumn":10,"suggestions":"621"},{"ruleId":"597","severity":1,"message":"620","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"622"},{"ruleId":"597","severity":1,"message":"610","line":64,"column":8,"nodeType":"599","endLine":64,"endColumn":10,"suggestions":"623"},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"597","severity":1,"message":"625","line":38,"column":8,"nodeType":"599","endLine":38,"endColumn":10,"suggestions":"626"},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"597","severity":1,"message":"625","line":38,"column":8,"nodeType":"599","endLine":38,"endColumn":10,"suggestions":"627"},{"ruleId":"616","severity":1,"message":"628","line":20,"column":12,"nodeType":"618","messageId":"619","endLine":20,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":20,"column":18,"nodeType":"618","messageId":"619","endLine":20,"endColumn":25},{"ruleId":"597","severity":1,"message":"625","line":50,"column":8,"nodeType":"599","endLine":50,"endColumn":10,"suggestions":"630"},{"ruleId":"616","severity":1,"message":"628","line":19,"column":12,"nodeType":"618","messageId":"619","endLine":19,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":19,"column":18,"nodeType":"618","messageId":"619","endLine":19,"endColumn":25},{"ruleId":"616","severity":1,"message":"628","line":19,"column":12,"nodeType":"618","messageId":"619","endLine":19,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":19,"column":18,"nodeType":"618","messageId":"619","endLine":19,"endColumn":25},{"ruleId":"616","severity":1,"message":"631","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":22},{"ruleId":"597","severity":1,"message":"632","line":41,"column":8,"nodeType":"599","endLine":41,"endColumn":10,"suggestions":"633"},{"ruleId":"616","severity":1,"message":"634","line":54,"column":101,"nodeType":"618","messageId":"619","endLine":54,"endColumn":106},{"ruleId":"597","severity":1,"message":"625","line":98,"column":8,"nodeType":"599","endLine":98,"endColumn":10,"suggestions":"635"},{"ruleId":"616","severity":1,"message":"636","line":14,"column":12,"nodeType":"618","messageId":"619","endLine":14,"endColumn":23},{"ruleId":"616","severity":1,"message":"637","line":15,"column":25,"nodeType":"618","messageId":"619","endLine":15,"endColumn":39},{"ruleId":"616","severity":1,"message":"638","line":16,"column":26,"nodeType":"618","messageId":"619","endLine":16,"endColumn":41},{"ruleId":"616","severity":1,"message":"639","line":17,"column":29,"nodeType":"618","messageId":"619","endLine":17,"endColumn":47},{"ruleId":"616","severity":1,"message":"640","line":18,"column":32,"nodeType":"618","messageId":"619","endLine":18,"endColumn":53},{"ruleId":"616","severity":1,"message":"641","line":19,"column":41,"nodeType":"618","messageId":"619","endLine":19,"endColumn":70},{"ruleId":"616","severity":1,"message":"642","line":20,"column":37,"nodeType":"618","messageId":"619","endLine":20,"endColumn":62},{"ruleId":"616","severity":1,"message":"643","line":21,"column":32,"nodeType":"618","messageId":"619","endLine":21,"endColumn":52},{"ruleId":"616","severity":1,"message":"634","line":64,"column":101,"nodeType":"618","messageId":"619","endLine":64,"endColumn":106},{"ruleId":"597","severity":1,"message":"625","line":107,"column":8,"nodeType":"599","endLine":107,"endColumn":10,"suggestions":"644"},{"ruleId":"597","severity":1,"message":"645","line":200,"column":8,"nodeType":"599","endLine":200,"endColumn":10,"suggestions":"646"},{"ruleId":"597","severity":1,"message":"647","line":66,"column":8,"nodeType":"599","endLine":66,"endColumn":10,"suggestions":"648"},{"ruleId":"616","severity":1,"message":"649","line":1,"column":9,"nodeType":"618","messageId":"619","endLine":1,"endColumn":18},{"ruleId":"616","severity":1,"message":"650","line":4,"column":9,"nodeType":"618","messageId":"619","endLine":4,"endColumn":17},{"ruleId":"616","severity":1,"message":"651","line":6,"column":8,"nodeType":"618","messageId":"619","endLine":6,"endColumn":20},{"ruleId":"616","severity":1,"message":"652","line":12,"column":21,"nodeType":"618","messageId":"619","endLine":12,"endColumn":25},{"ruleId":"616","severity":1,"message":"631","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":22},{"ruleId":"597","severity":1,"message":"632","line":43,"column":8,"nodeType":"599","endLine":43,"endColumn":10,"suggestions":"653"},{"ruleId":"616","severity":1,"message":"628","line":20,"column":12,"nodeType":"618","messageId":"619","endLine":20,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":20,"column":18,"nodeType":"618","messageId":"619","endLine":20,"endColumn":25},{"ruleId":"597","severity":1,"message":"654","line":70,"column":4,"nodeType":"599","endLine":70,"endColumn":6,"suggestions":"655"},{"ruleId":"597","severity":1,"message":"647","line":66,"column":8,"nodeType":"599","endLine":66,"endColumn":10,"suggestions":"656"},{"ruleId":"616","severity":1,"message":"628","line":21,"column":12,"nodeType":"618","messageId":"619","endLine":21,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":21,"column":18,"nodeType":"618","messageId":"619","endLine":21,"endColumn":25},{"ruleId":"597","severity":1,"message":"657","line":31,"column":4,"nodeType":"599","endLine":31,"endColumn":6,"suggestions":"658"},{"ruleId":"616","severity":1,"message":"628","line":21,"column":12,"nodeType":"618","messageId":"619","endLine":21,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":21,"column":18,"nodeType":"618","messageId":"619","endLine":21,"endColumn":25},{"ruleId":"616","severity":1,"message":"659","line":24,"column":12,"nodeType":"618","messageId":"619","endLine":24,"endColumn":23},{"ruleId":"597","severity":1,"message":"660","line":32,"column":8,"nodeType":"599","endLine":32,"endColumn":10,"suggestions":"661"},{"ruleId":"597","severity":1,"message":"625","line":62,"column":9,"nodeType":"599","endLine":62,"endColumn":11,"suggestions":"662"},{"ruleId":"604","severity":1,"message":"605","line":9,"column":17,"nodeType":"603","endLine":9,"endColumn":84},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"604","severity":1,"message":"605","line":155,"column":41,"nodeType":"603","endLine":155,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":172,"column":65,"nodeType":"666","endLine":172,"endColumn":86},{"ruleId":"664","severity":1,"message":"665","line":201,"column":56,"nodeType":"666","endLine":201,"endColumn":77},{"ruleId":"616","severity":1,"message":"667","line":92,"column":23,"nodeType":"618","messageId":"619","endLine":92,"endColumn":35},{"ruleId":"604","severity":1,"message":"605","line":210,"column":41,"nodeType":"603","endLine":210,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":229,"column":41,"nodeType":"666","endLine":229,"endColumn":62},{"ruleId":"664","severity":1,"message":"665","line":262,"column":33,"nodeType":"666","endLine":262,"endColumn":54},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"616","severity":1,"message":"668","line":43,"column":11,"nodeType":"618","messageId":"619","endLine":43,"endColumn":22},{"ruleId":"604","severity":1,"message":"605","line":146,"column":41,"nodeType":"603","endLine":146,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":163,"column":65,"nodeType":"666","endLine":163,"endColumn":86},{"ruleId":"664","severity":1,"message":"665","line":192,"column":56,"nodeType":"666","endLine":192,"endColumn":77},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"669","line":3,"column":9,"nodeType":"618","messageId":"619","endLine":3,"endColumn":22},{"ruleId":"616","severity":1,"message":"670","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":11},{"ruleId":"616","severity":1,"message":"671","line":10,"column":8,"nodeType":"618","messageId":"619","endLine":10,"endColumn":19},{"ruleId":"604","severity":1,"message":"605","line":88,"column":33,"nodeType":"603","endLine":92,"endColumn":35},{"ruleId":"616","severity":1,"message":"671","line":9,"column":8,"nodeType":"618","messageId":"619","endLine":9,"endColumn":19},{"ruleId":"604","severity":1,"message":"605","line":90,"column":33,"nodeType":"603","endLine":94,"endColumn":35},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"616","severity":1,"message":"668","line":42,"column":11,"nodeType":"618","messageId":"619","endLine":42,"endColumn":22},{"ruleId":"604","severity":1,"message":"605","line":145,"column":41,"nodeType":"603","endLine":145,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":162,"column":65,"nodeType":"666","endLine":162,"endColumn":86},{"ruleId":"664","severity":1,"message":"665","line":191,"column":56,"nodeType":"666","endLine":191,"endColumn":77},{"ruleId":"616","severity":1,"message":"670","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":11},{"ruleId":"604","severity":1,"message":"605","line":112,"column":33,"nodeType":"603","endLine":116,"endColumn":35},{"ruleId":"616","severity":1,"message":"670","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":11},{"ruleId":"604","severity":1,"message":"605","line":87,"column":33,"nodeType":"603","endLine":91,"endColumn":35},{"ruleId":"616","severity":1,"message":"670","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":11},{"ruleId":"604","severity":1,"message":"605","line":106,"column":33,"nodeType":"603","endLine":106,"endColumn":103},{"ruleId":"616","severity":1,"message":"670","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":11},{"ruleId":"616","severity":1,"message":"671","line":10,"column":8,"nodeType":"618","messageId":"619","endLine":10,"endColumn":19},{"ruleId":"604","severity":1,"message":"605","line":90,"column":29,"nodeType":"603","endLine":90,"endColumn":149},{"ruleId":"616","severity":1,"message":"670","line":2,"column":8,"nodeType":"618","messageId":"619","endLine":2,"endColumn":11},{"ruleId":"616","severity":1,"message":"669","line":5,"column":9,"nodeType":"618","messageId":"619","endLine":5,"endColumn":22},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"604","severity":1,"message":"605","line":91,"column":33,"nodeType":"603","endLine":91,"endColumn":103},{"ruleId":"597","severity":1,"message":"647","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"672"},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"597","severity":1,"message":"647","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"673"},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"674","line":3,"column":9,"nodeType":"618","messageId":"619","endLine":3,"endColumn":28},{"ruleId":"616","severity":1,"message":"675","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":13},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"616","severity":1,"message":"652","line":17,"column":12,"nodeType":"618","messageId":"619","endLine":17,"endColumn":16},{"ruleId":"597","severity":1,"message":"647","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"676"},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"674","line":3,"column":9,"nodeType":"618","messageId":"619","endLine":3,"endColumn":28},{"ruleId":"616","severity":1,"message":"675","line":4,"column":8,"nodeType":"618","messageId":"619","endLine":4,"endColumn":13},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"616","severity":1,"message":"652","line":17,"column":12,"nodeType":"618","messageId":"619","endLine":17,"endColumn":16},{"ruleId":"601","severity":1,"message":"602","line":11,"column":17,"nodeType":"603","endLine":11,"endColumn":54},{"ruleId":"604","severity":1,"message":"605","line":13,"column":21,"nodeType":"603","endLine":13,"endColumn":66},{"ruleId":"601","severity":1,"message":"602","line":36,"column":29,"nodeType":"603","endLine":36,"endColumn":73},{"ruleId":"601","severity":1,"message":"602","line":37,"column":33,"nodeType":"603","endLine":37,"endColumn":103},{"ruleId":"604","severity":1,"message":"605","line":9,"column":17,"nodeType":"603","endLine":9,"endColumn":84},{"ruleId":"616","severity":1,"message":"663","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":13},{"ruleId":"616","severity":1,"message":"628","line":23,"column":12,"nodeType":"618","messageId":"619","endLine":23,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":23,"column":18,"nodeType":"618","messageId":"619","endLine":23,"endColumn":25},{"ruleId":"597","severity":1,"message":"677","line":42,"column":4,"nodeType":"599","endLine":42,"endColumn":10,"suggestions":"678"},{"ruleId":"597","severity":1,"message":"679","line":64,"column":4,"nodeType":"599","endLine":64,"endColumn":6,"suggestions":"680"},{"ruleId":"597","severity":1,"message":"598","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"681"},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"604","severity":1,"message":"605","line":135,"column":41,"nodeType":"603","endLine":135,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":154,"column":41,"nodeType":"666","endLine":154,"endColumn":62},{"ruleId":"664","severity":1,"message":"665","line":187,"column":33,"nodeType":"666","endLine":187,"endColumn":54},{"ruleId":"597","severity":1,"message":"598","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"682"},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"674","line":3,"column":9,"nodeType":"618","messageId":"619","endLine":3,"endColumn":28},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"616","severity":1,"message":"675","line":14,"column":8,"nodeType":"618","messageId":"619","endLine":14,"endColumn":13},{"ruleId":"616","severity":1,"message":"652","line":40,"column":12,"nodeType":"618","messageId":"619","endLine":40,"endColumn":16},{"ruleId":"604","severity":1,"message":"605","line":99,"column":41,"nodeType":"603","endLine":99,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":118,"column":41,"nodeType":"666","endLine":118,"endColumn":62},{"ruleId":"664","severity":1,"message":"665","line":151,"column":33,"nodeType":"666","endLine":151,"endColumn":54},{"ruleId":"616","severity":1,"message":"628","line":20,"column":12,"nodeType":"618","messageId":"619","endLine":20,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":20,"column":18,"nodeType":"618","messageId":"619","endLine":20,"endColumn":25},{"ruleId":"616","severity":1,"message":"628","line":11,"column":12,"nodeType":"618","messageId":"619","endLine":11,"endColumn":16},{"ruleId":"616","severity":1,"message":"629","line":11,"column":18,"nodeType":"618","messageId":"619","endLine":11,"endColumn":25},{"ruleId":"597","severity":1,"message":"683","line":45,"column":8,"nodeType":"599","endLine":45,"endColumn":10,"suggestions":"684"},{"ruleId":"685","severity":1,"message":"686","line":123,"column":33,"nodeType":"687","messageId":"688","endLine":123,"endColumn":38},{"ruleId":"597","severity":1,"message":"598","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"689"},{"ruleId":"597","severity":1,"message":"598","line":67,"column":8,"nodeType":"599","endLine":67,"endColumn":10,"suggestions":"690"},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"604","severity":1,"message":"605","line":123,"column":41,"nodeType":"603","endLine":123,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":140,"column":65,"nodeType":"666","endLine":140,"endColumn":86},{"ruleId":"664","severity":1,"message":"665","line":169,"column":56,"nodeType":"666","endLine":169,"endColumn":77},{"ruleId":"616","severity":1,"message":"624","line":2,"column":9,"nodeType":"618","messageId":"619","endLine":2,"endColumn":17},{"ruleId":"616","severity":1,"message":"663","line":6,"column":9,"nodeType":"618","messageId":"619","endLine":6,"endColumn":13},{"ruleId":"604","severity":1,"message":"605","line":124,"column":41,"nodeType":"603","endLine":124,"endColumn":110},{"ruleId":"664","severity":1,"message":"665","line":141,"column":65,"nodeType":"666","endLine":141,"endColumn":86},{"ruleId":"664","severity":1,"message":"665","line":170,"column":56,"nodeType":"666","endLine":170,"endColumn":77},"no-native-reassign",["691"],"no-negated-in-lhs",["692"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUOrderData'. Either include it or remove the dependency array.","ArrayExpression",["693"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["694"],["695"],["696"],["697"],"React Hook useEffect has a missing dependency: 'loadDispatcherData'. Either include it or remove the dependency array.",["698"],"React Hook useEffect has a missing dependency: 'loadUserData'. Either include it or remove the dependency array.",["699"],["700"],["701"],"no-unused-vars","'mealSlug' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'loadMealData'. Either include it or remove the dependency array.",["702"],["703"],["704"],"'GiCancel' is defined but never used.","React Hook useEffect has a missing dependency: 'loadCategory'. Either include it or remove the dependency array.",["705"],["706"],"'show' is assigned a value but never used.","'setShow' is assigned a value but never used.",["707"],"'InfiniteScroll' is defined but never used.","React Hook useEffect has a missing dependency: 'loadLocationData'. Either include it or remove the dependency array.",["708"],"'image' is assigned a value but never used.",["709"],"'oldMealData' is assigned a value but never used.","'setOldMealName' is assigned a value but never used.","'setOldMealPrice' is assigned a value but never used.","'setOldMealCategory' is assigned a value but never used.","'setOldMealSubCategory' is assigned a value but never used.","'setOlMealMeasurement_quantity' is assigned a value but never used.","'setOlMealMeasurement_type' is assigned a value but never used.","'setOlMealDescription' is assigned a value but never used.",["710"],"React Hook useEffect has missing dependencies: 'location.state.category', 'location.state.data', 'location.state.description', 'location.state.extra_items', 'location.state.measurement_quantity', 'location.state.measurement_type', 'location.state.name', 'location.state.price', 'location.state.slug', and 'location.state.subcategory'. Either include them or remove the dependency array.",["711"],"React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["712"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'PreloaderImg' is defined but never used.","'user' is assigned a value but never used.",["713"],"React Hook useEffect has a missing dependency: 'routeData.state.name'. Either include it or remove the dependency array.",["714"],["715"],"React Hook useEffect has missing dependencies: 'location.state.name' and 'location.state.slug'. Either include them or remove the dependency array.",["716"],"'oldcategory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'location.state.category', 'location.state.name', and 'location.state.slug'. Either include them or remove the dependency array.",["717"],["718"],"'Link' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setErrorName' is assigned a value but never used.","'cancelOrder' is assigned a value but never used.","'AiOutlineEdit' is defined but never used.","'Pic' is defined but never used.","'DialogTitle' is defined but never used.",["719"],["720"],"'IoMdCheckmarkCircle' is defined but never used.","'axios' is defined but never used.",["721"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["722"],"React Hook useEffect has a missing dependency: 'loadplace'. Either include it or remove the dependency array.",["723"],["724"],["725"],"React Hook useEffect has a missing dependency: 'props.location.search'. Either include it or remove the dependency array.",["726"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected",["727"],["728"],"no-global-assign","no-unsafe-negation",{"desc":"729","fix":"730"},{"desc":"729","fix":"731"},{"desc":"729","fix":"732"},{"desc":"729","fix":"733"},{"desc":"729","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"737","fix":"739"},{"desc":"735","fix":"740"},{"desc":"741","fix":"742"},{"desc":"741","fix":"743"},{"desc":"735","fix":"744"},{"desc":"745","fix":"746"},{"desc":"745","fix":"747"},{"desc":"745","fix":"748"},{"desc":"749","fix":"750"},{"desc":"745","fix":"751"},{"desc":"745","fix":"752"},{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"desc":"749","fix":"757"},{"desc":"758","fix":"759"},{"desc":"755","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"745","fix":"765"},{"desc":"755","fix":"766"},{"desc":"755","fix":"767"},{"desc":"755","fix":"768"},{"desc":"769","fix":"770"},{"desc":"771","fix":"772"},{"desc":"729","fix":"773"},{"desc":"729","fix":"774"},{"desc":"775","fix":"776"},{"desc":"729","fix":"777"},{"desc":"729","fix":"778"},"Update the dependencies array to be: [loadUOrderData]",{"range":"779","text":"780"},{"range":"781","text":"780"},{"range":"782","text":"780"},{"range":"783","text":"780"},{"range":"784","text":"780"},"Update the dependencies array to be: [loadDispatcherData]",{"range":"785","text":"786"},"Update the dependencies array to be: [loadUserData]",{"range":"787","text":"788"},{"range":"789","text":"788"},{"range":"790","text":"786"},"Update the dependencies array to be: [loadMealData]",{"range":"791","text":"792"},{"range":"793","text":"792"},{"range":"794","text":"786"},"Update the dependencies array to be: [loadCategory]",{"range":"795","text":"796"},{"range":"797","text":"796"},{"range":"798","text":"796"},"Update the dependencies array to be: [loadLocationData]",{"range":"799","text":"800"},{"range":"801","text":"796"},{"range":"802","text":"796"},"Update the dependencies array to be: [location.state.category, location.state.data, location.state.description, location.state.extra_items, location.state.measurement_quantity, location.state.measurement_type, location.state.name, location.state.price, location.state.slug, location.state.subcategory]",{"range":"803","text":"804"},"Update the dependencies array to be: [loadData]",{"range":"805","text":"806"},{"range":"807","text":"800"},"Update the dependencies array to be: [routeData.state.name]",{"range":"808","text":"809"},{"range":"810","text":"806"},"Update the dependencies array to be: [location.state.name, location.state.slug]",{"range":"811","text":"812"},"Update the dependencies array to be: [location.state.category, location.state.name, location.state.slug]",{"range":"813","text":"814"},{"range":"815","text":"796"},{"range":"816","text":"806"},{"range":"817","text":"806"},{"range":"818","text":"806"},"Update the dependencies array to be: [props.history, user]",{"range":"819","text":"820"},"Update the dependencies array to be: [loadplace]",{"range":"821","text":"822"},{"range":"823","text":"780"},{"range":"824","text":"780"},"Update the dependencies array to be: [props.location.search]",{"range":"825","text":"826"},{"range":"827","text":"780"},{"range":"828","text":"780"},[2332,2334],"[loadUOrderData]",[2339,2341],[2337,2339],[2329,2331],[2395,2397],[2412,2414],"[loadDispatcherData]",[2301,2303],"[loadUserData]",[2297,2299],[2416,2418],[2400,2402],"[loadMealData]",[2318,2320],[2416,2418],[1311,1313],"[loadCategory]",[1330,1332],[1729,1731],[1332,1334],"[loadLocationData]",[3139,3141],[3865,3867],[7141,7143],"[location.state.category, location.state.data, location.state.description, location.state.extra_items, location.state.measurement_quantity, location.state.measurement_type, location.state.name, location.state.price, location.state.slug, location.state.subcategory]",[2106,2108],"[loadData]",[1350,1352],[2324,2326],"[routeData.state.name]",[2110,2112],[1039,1041],"[location.state.name, location.state.slug]",[1282,1284],"[location.state.category, location.state.name, location.state.slug]",[2255,2257],[2195,2197],[2198,2200],[2203,2205],[1198,1204],"[props.history, user]",[1709,1711],"[loadplace]",[2384,2386],[2400,2402],[1586,1588],"[props.location.search]",[2401,2403],[2407,2409]]